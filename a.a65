; ------------------------------------------------------------
; Mad Pascal Compiler version 1.7.2 [2024/10/15] for MOS 6502 CPU
; ------------------------------------------------------------

STACKWIDTH	= 16
CODEORIGIN	= $2000

TRUE		= 1
FALSE		= 0
EOL		= $9B
__BUFFER	= $0400
@BUF		= __BUFFER

; ------------------------------------------------------------

	org $80

zpage

.if .def(@vbxe_detect)
fxptr	.ds 2						; VBXE pointer
.fi

.if .def(@AllocMem)||.def(MAIN.SYSTEM.GETMEM)||.def(MAIN.SYSTEM.FREEMEM)
psptr	.ds 2						; PROGRAMSTACK Pointer
.fi

bp	.ds 2
bp2	.ds 2
bp3	= bp+1

eax	.ds 4						;8 bytes (aex + edx) -> divREAL
edx	.ds 4
ecx	.ds 4

TMP
ztmp
ztmp8	.ds 1
ztmp9	.ds 1
ztmp10	.ds 1
ztmp11	.ds 1

STACKORIGIN	.ds STACKWIDTH*4
zpend

; ------------------------------------------------------------

ax	= eax
al	= eax
ah	= eax+1

cx	= ecx
cl	= ecx
ch	= ecx+1

dx	= edx
dl	= edx
dh	= edx+1

	org eax

FP1MAN0	.ds 1
FP1MAN1	.ds 1
FP1MAN2	.ds 1
FP1MAN3	.ds 1

	org edx

FP2MAN0	.ds 1
FP2MAN1	.ds 1
FP2MAN2	.ds 1
FP2MAN3	.ds 1

	org ecx

FPMAN0	.ds 1
FPMAN1	.ds 1
FPMAN2	.ds 1
FPMAN3	.ds 1

	org ztmp8

FP1SGN	.ds 1
FP1EXP	.ds 1

	org ztmp10

FP2SGN	.ds 1
FP2EXP	.ds 1

	org bp2

FPSGN	.ds 1
FPEXP	.ds 1

	.ifdef MAIN.@DEFINES.BASICOFF
	org CODEORIGIN
	icl 'atari\basicoff.asm'
	ini CODEORIGIN
	.fi

	.ifdef MAIN.@DEFINES.S_VBXE
	opt h-
	ins 'atari\s_vbxe\sdxld2.obx'
	opt h+
	.fi

; ------------------------------------------------------------

	org CODEORIGIN

	STATICDATA

; ------------------------------------------------------------

RTLIB
	icl 'rtl6502_a8.asm'

.print 'ZPAGE: ',zpage,'..',zpend-1

.print 'RTBUF: ',@buf,'..',@buf+255

.print 'RTLIB: ',RTLIB,'..',*-1

; ------------------------------------------------------------

START
	tsx
	stx MAIN.@halt+1

	.ifdef MAIN.@DEFINES.ROMOFF
	icl 'atari\romoff.asm'
	.fi

VLEN	= VARDATASIZE-VARINITSIZE
VADR	= DATAORIGIN+VARINITSIZE

	ift (VADR > $BFFF) && .not(.def MAIN.@DEFINES.ROMOFF)
	ert 'Invalid memory address range ',VADR
	eif

	ift (VLEN > 0) && (VLEN <= 256)
	ldx #256-VLEN
	lda #$00
	sta:rne VADR+VLEN-256,x+
	eli VLEN>256
	m@init
	eif

.ifdef psptr
	mwa #PROGRAMSTACK psptr
.fi

	ldx #$00					; X = 0
	stx bp						; BP = 0

	stx audctl					; reset POKEY
	stx audctl+$10
	lda #3
	sta skctl
	sta skctl+$10

	dex						; X = 255

	UNITINITIALIZATION

.local	MAIN						; PROCEDURE

	jmp l_0004

; ------------------------------------------------------------

.local	SYSTEM						; UNIT

; ------------------------------------------------------------
; ------------------------------------------------------------
@UnitInit

; -------------------  ASM Block 00000060  -------------------

	.ifdef @CmdLine

	ldx #$0F
	mva:rpl $340,x IOCB@COPY,x-
	rts

IOCB@COPY	:16 brk
	eif


	rts

; ------------------------------------------------------------

M_PI_2	= $0648
D_PI_2	= $0192
D_PI_180	= $04
__PORTB_BANKS	= $0101
MGTIA	= $00
MVBXE	= $80
VBXE_XDLADR	= $00
VBXE_BCBTMP	= $E0
VBXE_BCBADR	= $0100
VBXE_MAPADR	= $1000
VBXE_CHBASE	= $1000
VBXE_OVRADR	= $5000
VBXE_WINDOW	= $B000
IDLI	= $00
IVBL	= $01
IVBLD	= $01
IVBLI	= $02
ITIM1	= $03
ITIM2	= $04
ITIM4	= $05
CH_DELCHR	= $FE
CH_ENTER	= $9B
CH_ESC	= $1B
CH_CURS_UP	= $1C
CH_CURS_DOWN	= $1D
CH_CURS_LEFT	= $1E
CH_CURS_RIGHT	= $1F
CH_TAB	= $7F
CH_EOL	= $9B
CH_CLR	= $7D
CH_BELL	= $FD
CH_DEL	= $7E
CH_DELLINE	= $9C
CH_INSLINE	= $9D
PAL_PMCOLOR0	= $00
PAL_PMCOLOR1	= $01
PAL_PMCOLOR2	= $02
PAL_PMCOLOR3	= $03
PAL_COLOR0	= $04
PAL_COLOR1	= $05
PAL_COLOR2	= $06
PAL_COLOR3	= $07
PAL_COLBAK	= $08
COLOR_BLACK	= $00
COLOR_WHITE	= $0E
COLOR_RED	= $32
COLOR_CYAN	= $96
COLOR_VIOLET	= $68
COLOR_GREEN	= $C4
COLOR_BLUE	= $74
COLOR_YELLOW	= $EE
COLOR_ORANGE	= $28
COLOR_BROWN	= $E4
COLOR_LIGHTRED	= $3C
COLOR_GRAY1	= $04
COLOR_GRAY2	= $06
COLOR_GRAY3	= $0A
COLOR_LIGHTGREEN	= $CC
COLOR_LIGHTBLUE	= $7C
FMOPENREAD	= $04
FMOPENWRITE	= $08
FMOPENAPPEND	= $09
FMOPENREADWRITE	= $0C
DATESEPARATOR	= DATAORIGIN+$0000
RND	= $D20A
adr.PALETTE	= $02C0
.var PALETTE	= adr.PALETTE .word
adr.HPALETTE	= $D012
.var HPALETTE	= adr.HPALETTE .word
FILEMODE	= DATAORIGIN+$0001
GRAPHMODE	= DATAORIGIN+$0002
IORESULT	= DATAORIGIN+$0003
EOLN	= DATAORIGIN+$0004
SCREENWIDTH	= DATAORIGIN+$0005
SCREENHEIGHT	= DATAORIGIN+$0007
RNDSEED	= DATAORIGIN+$0009

.endl							; UNIT SYSTEM

; ------------------------------------------------------------

.local	ATARI						; UNIT

; ------------------------------------------------------------

IRQENS	= $10
RTCLOK	= $12
RTCLOK1	= $12
RTCLOK2	= $13
RTCLOK3	= $14
ATRACT	= $4D
LMARGIN	= $52
RMARGIN	= $53
ROWCRS	= $54
COLCRS	= $55
DINDEX	= $57
SAVMSC	= $58
PALNTS	= $62
RAMTOP	= $6A
VDSLST	= $0200
SDLSTL	= $0230
TXTROW	= $0290
TXTCOL	= $0291
TINDEX	= $0293
TXTMSC	= $0294
SDMCTL	= $022F
GPRIOR	= $026F
CRSINH	= $02F0
CHACT	= $02F3
CHBAS	= $02F4
CH	= $02FC
FILDAT	= $02FD
PCOLR0	= $02C0
PCOLR1	= $02C1
PCOLR2	= $02C2
PCOLR3	= $02C3
COLOR0	= $02C4
COLOR1	= $02C5
COLOR2	= $02C6
COLOR3	= $02C7
COLOR4	= $02C8
COLBAKS	= $02C8
HPOSP0	= $D000
HPOSP1	= $D001
HPOSP2	= $D002
HPOSP3	= $D003
HPOSM0	= $D004
HPOSM1	= $D005
HPOSM2	= $D006
HPOSM3	= $D007
SIZEP0	= $D008
SIZEP1	= $D009
SIZEP2	= $D00A
SIZEP3	= $D00B
SIZEM	= $D00C
GRAFP0	= $D00D
GRAFP1	= $D00E
GRAFP2	= $D00F
GRAFP3	= $D010
GRAFM	= $D011
P0PF	= $D004
PAL	= $D014
TRIG3	= $D013
COLPM0	= $D012
COLPM1	= $D013
COLPM2	= $D014
COLPM3	= $D015
COLPF0	= $D016
COLPF1	= $D017
COLPF2	= $D018
COLPF3	= $D019
COLBAK	= $D01A
COLBK	= $D01A
PRIOR	= $D01B
GRACTL	= $D01D
HITCLR	= $D01E
CONSOL	= $D01F
AUDF1	= $D200
AUDC1	= $D201
AUDF2	= $D202
AUDC2	= $D203
AUDF3	= $D204
AUDC3	= $D205
AUDF4	= $D206
AUDC4	= $D207
AUDCTL	= $D208
KBCODE	= $D209
IRQEN	= $D20E
SKSTAT	= $D20F
PORTA	= $D300
PORTB	= $D301
PACTL	= $D302
DMACTL	= $D400
CHACTL	= $D401
DLISTL	= $D402
HSCROL	= $D404
VSCROL	= $D405
PMBASE	= $D407
CHBASE	= $D409
WSYNC	= $D40A
VCOUNT	= $D40B
PENH	= $D40C
PENV	= $D40D
NMIEN	= $D40E
NMIVEC	= $FFFA
RESETVEC	= $FFFC
IRQVEC	= $FFFE

.endl							; UNIT ATARI

; ------------------------------------------------------------

.local	CRT						; UNIT

; ------------------------------------------------------------

TEXTATTR	= DATAORIGIN+$000B
CONSOL	= $D01F
CN_START_SELECT_OPTION	= $00
CN_SELECT_OPTION	= $01
CN_START_OPTION	= $02
CN_OPTION	= $03
CN_START_SELECT	= $04
CN_SELECT	= $05
CN_START	= $06
CN_NONE	= $07
BLACK	= $00
WHITE	= $0F
RED	= $26
CYAN	= $AC
PURPLE	= $48
GREEN	= $B6
BLUE	= $86
YELLOW	= $DC
ORANGE	= $18
BROWN	= $F4
LIGHT_RED	= $2A
DARK_GREY	= $04
GREY	= $08
LIGHT_GREEN	= $BC
LIGHT_BLUE	= $9A
LIGHT_GREY	= $0C
BW40	= $00
CO40	= $01
BW80	= $02
CO80	= $03
MONO	= $07
C40	= $01
C80	= $03
BLINK	= $80

.endl							; UNIT CRT

; ------------------------------------------------------------

.local	TYPES						; UNIT

; ------------------------------------------------------------

.endl							; UNIT TYPES

; ------------------------------------------------------------

.local	FASTGRAPH					; UNIT

.local	SETCOLOR					; PROCEDURE | ASSEMBLER
	sta COLOR

; -------------------  ASM Block 00000073  -------------------

	sta GetColor

	jmp gr8
mode	equ *-2

gr15	lda color
	and #3
	tay

	jmp toend

gr9	txa:pha

	lda color
	and #$0f
	sta c9+1
	:4 asl @
	sta c9

	ldy #0
lp	tya
	and #1
	tax
	lda c9_,x
	sta adr.color_bits,y
	lda c9,x
	sta adr.color_bits+$100,y
	iny
	bne lp

	pla:tax

	ldy color
	beq toend

	ldy #1
	jmp toend

c9	dta 0,0
c9_	dta $0f, $f0

colorHi	dta h(adr.color_bits, adr.color_bits+$100, adr.color_bits+$200, adr.color_bits+$300)

gr8	lda color
	and #1
	tay

toend
	.ifdef fLine
	lda colorHi,y
	sta fLine.urr_color+2
	sta fLine.uur_color+2
	sta fLine.drr_color+2
	sta fLine.ddr_color+2

	lda #$1d		; ora *,x
	cpy #0
	sne
	lda #$3d		; and *,x

	sta fLine.urr_color
	sta fLine.uur_color
	sta fLine.drr_color
	sta fLine.ddr_color
	.endif

	.ifdef PutPixel
	mva colorHi,y PutPixel.acol+2

	lda #$1d		; ora *,x
	cpy #0
	sne
	lda #$3d		; and *,x

	sta PutPixel.acol
	.endif

; ------------------------------------------------------------

COLOR	= DATAORIGIN+$0728

@VarData	= COLOR
@VarDataSize	= 1

@exit
	.ifdef @new
	lda <@VarData
	sta :ztmp
	lda >@VarData
	ldy #@VarDataSize-1
	jmp @FreeMem
	els
	rts						; ret
	eif
.endl

.local	PUTPIXEL					; PROCEDURE | ASSEMBLER | REGISTER

; -------------------  ASM Block 00000074  -------------------

	stx @sp

	lda y+1
	bmi stop
	cmp hsh:#0	;MAIN.SYSTEM.ScreenHeight+1
	bne sk0
	lda y
	cmp lsh:#0	;MAIN.SYSTEM.ScreenHeight
sk0
	bcs stop

	lda x+1
	bmi stop
	cmp hsw:#0	;MAIN.SYSTEM.ScreenWidth+1
	bne sk1
	lda x
	cmp lsw:#0	;MAIN.SYSTEM.ScreenWidth
sk1
	bcs stop

	ldy y
	lda adr.lineLo,y
	add lfb:#0
	sta :bp2

	lda adr.lineHi,y
	adc hfb:#0
	sta :bp2+1

	jmp gr8
mode	equ *-2

; ----------------------------

gr15	ldx x
	ldy adr.div4,x

	jmp plot

; ----------------------------

gr9	lda x
	lsr @
	tay
	lda x
	and #1
	tax

	jmp plot

; ----------------------------

gr8	lda x
	tax

	lsr x+1
	ror @

	:2 lsr @
	tay

plot	lda (:bp2),y
acol	and adr.color_bits,x
	sta (:bp2),y

stop	ldx #0
@sp	equ *-1


; ------------------------------------------------------------

X	= :EDX
Y	= :ECX

@exit
	.ifdef @new
	lda <@VarData
	sta :ztmp
	lda >@VarData
	ldy #@VarDataSize-1
	jmp @FreeMem
	els
	rts						; ret
	eif
.endl

.local	LINE						; PROCEDURE | OVERLOAD
.local	@040184000018400001840000184000

; optimize OK (FASTGRAPH), line = 462

	lda X1+1
	jpl l_00AA
	lda #$00
	sta X1
	sta X1+1
l_00AA

; optimize OK (FASTGRAPH), line = 463

	lda Y1+1
	jpl l_00C2
	lda #$00
	sta Y1
	sta Y1+1
l_00C2

; optimize OK (FASTGRAPH), line = 465

	lda X2+1
	jpl l_00DA
	lda #$00
	sta X2
	sta X2+1
l_00DA

; optimize OK (FASTGRAPH), line = 466

	lda Y2+1
	jpl l_00F2
	lda #$00
	sta Y2
	sta Y2+1
l_00F2

; optimize OK (FASTGRAPH), line = 468

	lda Y2
	sub Y1
	sta DY
	lda Y2+1
	sbc Y1+1
	sta DY+1

; optimize OK (FASTGRAPH), line = 469

	lda X2
	sub X1
	sta DX
	lda X2+1
	sbc X1+1
	sta DX+1

; optimize OK (FASTGRAPH), line = 471

	lda DY+1
	jpl l_011E
	lda #$00
	sub DY
	sta DY
	lda #$00
	sbc DY+1
	sta DY+1
	lda #$FF
	sta STEPY
	jmp l_0134
l_011E
	lda #$01
	sta STEPY
	lda #$00
l_0134
	sta STEPY+1

; optimize OK (FASTGRAPH), line = 472

	lda DX+1
	jpl l_0149
	lda #$00
	sub DX
	sta DX
	lda #$00
	sbc DX+1
	sta DX+1
	lda #$FF
	sta STEPX
	jmp l_015F
l_0149
	lda #$01
	sta STEPX
	lda #$00
l_015F
	sta STEPX+1

; optimize OK (FASTGRAPH), line = 473

	asl DY
	rol DY+1

; optimize OK (FASTGRAPH), line = 474

	asl DX
	rol DX+1

; optimize OK (FASTGRAPH), line = 476

	lda X1
	sta PUTPIXEL.X
	lda X1+1
	sta PUTPIXEL.X+1
	lda Y1
	sta PUTPIXEL.Y
	lda Y1+1
	sta PUTPIXEL.Y+1
	jsr PUTPIXEL

; optimize OK (FASTGRAPH), line = 478

	lda DY
	cmp DX
	lda DY+1
	sbc DX+1
	svc
	eor #$80
	jpl l_018E

; optimize OK (FASTGRAPH), line = 480

	lda DY+1
	sta :STACKORIGIN+STACKWIDTH+9
	lda DY
	asl @
	rol :STACKORIGIN+STACKWIDTH+9
	sub DX
	sta FRACTION
	lda :STACKORIGIN+STACKWIDTH+9
	sbc DX+1
	sta FRACTION+1

; --- WhileProlog
	jmp l_019F
l_01A0

; optimize OK (FASTGRAPH), line = 483

	lda FRACTION+1
	jmi l_01B1

; optimize OK (FASTGRAPH), line = 484

	lda Y1
	add STEPY
	sta Y1
	lda Y1+1
	adc STEPY+1
	sta Y1+1

; optimize OK (FASTGRAPH), line = 485

	lda FRACTION
	sub DX
	sta FRACTION
	lda FRACTION+1
	sbc DX+1
	sta FRACTION+1
l_01B1

; optimize OK (FASTGRAPH), line = 487

	lda X1
	add STEPX
	sta X1
	lda X1+1
	adc STEPX+1
	sta X1+1

; optimize OK (FASTGRAPH), line = 488

	lda FRACTION
	add DY
	sta FRACTION
	lda FRACTION+1
	adc DY+1
	sta FRACTION+1

; optimize OK (FASTGRAPH), line = 490

	lda X1
	sta PUTPIXEL.X
	lda X1+1
	sta PUTPIXEL.X+1
	lda Y1
	sta PUTPIXEL.Y
	lda Y1+1
	sta PUTPIXEL.Y+1
	jsr PUTPIXEL
l_019F

; optimize OK (FASTGRAPH), line = 482

	lda X1+1
	cmp X2+1
	jne l_01A0
	lda X1
	cmp X2
	jne l_01A0
	jmp l_01D6
l_018E

; optimize OK (FASTGRAPH), line = 495

	lda DX+1
	sta :STACKORIGIN+STACKWIDTH+9
	lda DX
	asl @
	rol :STACKORIGIN+STACKWIDTH+9
	sub DY
	sta FRACTION
	lda :STACKORIGIN+STACKWIDTH+9
	sbc DY+1
	sta FRACTION+1

; --- WhileProlog
	jmp l_01E6
l_01E7

; optimize OK (FASTGRAPH), line = 498

	lda FRACTION+1
	jmi l_01F8

; optimize OK (FASTGRAPH), line = 499

	lda X1
	add STEPX
	sta X1
	lda X1+1
	adc STEPX+1
	sta X1+1

; optimize OK (FASTGRAPH), line = 500

	lda FRACTION
	sub DY
	sta FRACTION
	lda FRACTION+1
	sbc DY+1
	sta FRACTION+1
l_01F8

; optimize OK (FASTGRAPH), line = 502

	lda Y1
	add STEPY
	sta Y1
	lda Y1+1
	adc STEPY+1
	sta Y1+1

; optimize OK (FASTGRAPH), line = 503

	lda FRACTION
	add DX
	sta FRACTION
	lda FRACTION+1
	adc DX+1
	sta FRACTION+1

; optimize OK (FASTGRAPH), line = 505

	lda X1
	sta PUTPIXEL.X
	lda X1+1
	sta PUTPIXEL.X+1
	lda Y1
	sta PUTPIXEL.Y
	lda Y1+1
	sta PUTPIXEL.Y+1
	jsr PUTPIXEL
l_01E6

; optimize OK (FASTGRAPH), line = 497

	lda Y1+1
	cmp Y2+1
	jne l_01E7
	lda Y1
	cmp Y2
	jne l_01E7
l_01D6

; ------------------------------------------------------------

X1	= DATAORIGIN+$0729
Y1	= DATAORIGIN+$072B
X2	= DATAORIGIN+$072D
Y2	= DATAORIGIN+$072F
DX	= DATAORIGIN+$0731
DY	= DATAORIGIN+$0733
FRACTION	= DATAORIGIN+$0735
STEPX	= DATAORIGIN+$0737
STEPY	= DATAORIGIN+$0739

@VarData	= X1
@VarDataSize	= 18

@exit
	.ifdef @new
	lda <@VarData
	sta :ztmp
	lda >@VarData
	ldy #@VarDataSize-1
	jmp @FreeMem
	els
	rts						; ret
	eif
.endl
.endl							; overload

.local	HLINE						; PROCEDURE

; optimize OK (FASTGRAPH), line = 557

	lda X1
	cmp X0
	lda X1+1
	sbc X0+1
	svc
	eor #$80
	jpl l_022A

; optimize OK (FASTGRAPH), line = 558

	lda X1
	sta TMP
	lda X1+1
	sta TMP+1

; optimize OK (FASTGRAPH), line = 559

	lda X0
	sta X1
	lda X0+1
	sta X1+1

; optimize OK (FASTGRAPH), line = 560

	lda TMP
	sta X0
	lda TMP+1
	sta X0+1
l_022A

; optimize OK (FASTGRAPH), line = 563

	lda SYSTEM.GRAPHMODE
	and #$0F
	sta MODE

; optimize OK (FASTGRAPH), line = 565

	cmp #$05
	jeq l_0270
	cmp #$07
	jeq l_0270
	cmp #$0F
	jeq l_0270

; optimize OK (FASTGRAPH), line = 566

	lda X0
	sta LINE.@040184000018400001840000184000.X1
	lda X0+1
	sta LINE.@040184000018400001840000184000.X1+1
	lda Y
	sta LINE.@040184000018400001840000184000.Y1
	lda Y+1
	sta LINE.@040184000018400001840000184000.Y1+1
	lda X1
	sta LINE.@040184000018400001840000184000.X2
	lda X1+1
	sta LINE.@040184000018400001840000184000.X2+1
	lda Y
	sta LINE.@040184000018400001840000184000.Y2
	lda Y+1
	sta LINE.@040184000018400001840000184000.Y2+1
	jsr LINE.@040184000018400001840000184000
	jmp @exit
l_0270

; -------------------  ASM Block 00000076  -------------------

	stx rX

	jmp skp

error	jmp exit

skp
	lda y+1
	bmi error
	cmp MAIN.SYSTEM.ScreenHeight+1
	bne sk0
	lda y
	cmp MAIN.SYSTEM.ScreenHeight
sk0
	bcs error

	lda x0+1
	bmi error
	cmp MAIN.SYSTEM.ScreenWidth+1
	bne sk1
	lda x0
	cmp MAIN.SYSTEM.ScreenWidth
sk1
	bcc ok1

	mwa MAIN.SYSTEM.ScreenWidth x0

ok1	lda x1+1
	bmi error
	cmp MAIN.SYSTEM.ScreenWidth+1
	bne sk2
	lda x1
	cmp MAIN.SYSTEM.ScreenWidth
sk2
	bcc ok2

	mwa MAIN.SYSTEM.ScreenWidth x1

ok2
	ldy y
	lda adr.lineLo,y
	add lfb:#0
	sta :bp2

	lda adr.lineHi,y
	adc hfb:#0
	sta :bp2+1


	lda GetColor
	and #3

	asl @
	asl @
	sta color
	tay
	lda left,y
	sta fill

	lda x0			; left edge
	and #3
	tax
	lda lmask,x
	sta lmsk
	eor #$ff
	sta _lmsk
	txa
	clc
	adc color: #0
	tax
	lda left,x
	sta lcol

	lda x0
	lsr @
	lsr @
	tay
	sty lf

	lda x1			; right edge
	and #3
	tax
	lda rmask,x
	sta rmsk
	eor #$ff
	sta _rmsk
	txa
	add color
	tax
	lda right,x
	sta rcol

	lda x1
	lsr @
	lsr @

	sec
	sbc lf: #0
	bne next

	lda fill		; Right and left edge in the same byte
	and _lmsk: #0
	and _rmsk: #0
	ora (:bp2),y

;	sta (:bp2),y
	
	jmp exit

next	tax

	lda (:bp2),y		; Byte with Left edge
	and lmsk: #0
	ora lcol: #0
	sta (:bp2),y

	dex
	beq stop

	lda fill: #0

lp	iny
	sta (:bp2),y
	dex
	bne lp


stop	iny
	lda (:bp2),y		; Byte with Right edge
	and rmsk: #0
	ora rcol: #0

;	sta (:bp2),y

	jmp exit


lmask	dta %00000000
	dta %11000000
	dta %11110000
	dta %11111100

left	dta 0,0,0,0

	dta %01010101
	dta %00010101
	dta %00000101
	dta %00000001

	dta %10101010
	dta %00101010
	dta %00001010
	dta %00000010

	dta %11111111
rmask
	dta %00111111
	dta %00001111
	dta %00000011

right	dta 0,0,0,0

	dta %01000000
	dta %01010000
	dta %01010100
	dta %01010101

	dta %10000000
	dta %10100000
	dta %10101000
	dta %10101010

	dta %11000000
	dta %11110000
	dta %11111100
	dta %11111111


exit	sta (:bp2),y

	ldx rX: #$00

; ------------------------------------------------------------

X0	= DATAORIGIN+$073B
X1	= DATAORIGIN+$073D
Y	= DATAORIGIN+$073F
MODE	= DATAORIGIN+$0741
TMP	= DATAORIGIN+$0742

@VarData	= X0
@VarDataSize	= 9

@exit
	.ifdef @new
	lda <@VarData
	sta :ztmp
	lda >@VarData
	ldy #@VarDataSize-1
	jmp @FreeMem
	els
	rts						; ret
	eif
.endl

.local	SETACTIVEBUFFER					; PROCEDURE | ASSEMBLER | OVERLOAD
.local	@010181000

; -------------------  ASM Block 00000080  -------------------

	lda a
	ldy a+1

	sta VideoRam
	sty VideoRam+1

	.ifdef PutPixel
	 sta PutPixel.lfb
	 sty PutPixel.hfb
	eif

	.ifdef GetPixel
	 sta GetPixel.lfb
	 sty GetPixel.hfb
	eif

	.ifdef HLine
	 sta HLine.lfb
	 sty HLine.hfb
	eif

	.ifdef fLine
	 sta fLine.lfb
	 sty fLine.hfb
	eif

	.ifdef PutPixel
	 lda WIN_RIGHT
	 add #1
	 sta PutPixel.lsw
	 lda WIN_RIGHT+1
	 adc #0
	 sta PutPixel.hsw

	 lda WIN_BOTTOM
	 add #1
	 sta PutPixel.lsh
	 lda WIN_BOTTOM+1
	 adc #0
	 sta PutPixel.hsh
	eif


; ------------------------------------------------------------

A	= DATAORIGIN+$0744

@VarData	= A
@VarDataSize	= 2

@exit
	.ifdef @new
	lda <@VarData
	sta :ztmp
	lda >@VarData
	ldy #@VarDataSize-1
	jmp @FreeMem
	els
	rts						; ret
	eif
.endl
.endl							; overload

.local	INITGRAPH					; PROCEDURE | OVERLOAD
.local	@010180000
	sta MODE

; optimize OK (FASTGRAPH), line = 1135

	sta SYSTEM.GRAPHMODE

; optimize OK (FASTGRAPH), line = 1137

	and #$0F
	sta WIDTH

; optimize OK (FASTGRAPH), line = 1139

	sta @CASETMP_0004
	cmp #$06
	beq @+
	cmp #$08
	jne l_02A0
@

; -------------------  ASM Block 00000081  -------------------

	.ifdef SetColor
	mwa #SetColor.gr8 SetColor.mode
	.endif

	.ifdef PutPixel
	mwa #PutPixel.gr8 PutPixel.mode
	.endif

	.ifdef GetPixel
	mwa #GetPixel.gr8 GetPixel.mode
	.endif
 
	jmp a_0004
l_02A0
	clc						; clear carry for add
	adc #$FF-$0B					; make m = $FF
	adc #$0B-$09+1					; carry set if in range n to m
	jcc l_02A7

; -------------------  ASM Block 00000082  -------------------

	.ifdef SetColor
	mwa #SetColor.gr9 SetColor.mode
	.endif

	.ifdef PutPixel
	mwa #PutPixel.gr9 PutPixel.mode
	.endif

	.ifdef GetPixel
	mwa #GetPixel.gr9 GetPixel.mode
	.endif

	.ifdef fLine
	mva #$ea _nop
	.endif
 
	jmp a_0004
l_02A7

; -------------------  ASM Block 00000083  -------------------

	.ifdef SetColor
	mwa #SetColor.gr15 SetColor.mode
	.endif

	.ifdef PutPixel
	mwa #PutPixel.gr15 PutPixel.mode
	.endif

	.ifdef GetPixel
	mwa #GetPixel.gr15 GetPixel.mode
	.endif
 
a_0004

; -------------------  ASM Block 00000084  -------------------

	txa:pha

	lda mode
	and #$0f
	tay

	ldx #$60	; 6*16
	lda mode	; %00010000 with text window
	and #$10
	eor #$10
	ora #2		; read

	.nowarn @GRAPHICS

	sty GraphResult


	.ifdef MAIN.@DEFINES.ROMOFF
	inc portb
	.endif

; Fox/TQA

dindex	equ $57

	ldx dindex
	lda adr.tmccn,x
	ldy adr.tmrcn,x
	ldx #0
	cmp #<320
	sne:inx

; X:A = horizontal resolution
; Y = vertical resolution

	sta MAIN.SYSTEM.ScreenWidth
	stx MAIN.SYSTEM.ScreenWidth+1

	sub #1
	sta WIN_RIGHT
	txa
	sbc #0
	sta WIN_RIGHT+1

	sty MAIN.SYSTEM.ScreenHeight
	lda #0
	sta MAIN.SYSTEM.ScreenHeight+1

	sta WIN_LEFT
	sta WIN_LEFT+1
	sta WIN_TOP
	sta WIN_TOP+1

	sta WIN_BOTTOM+1
	dey
	sty WIN_BOTTOM


	ldx dindex
	ldy adr.tlshc,x
	lda #5
shift	asl @
	dey
	bne shift

	sta width
;	sta SCANLINE_WIDTH

	.ifdef fLine
;	lda width
	sta fLine.w0
	sta fLine.w1
	sta fLine.w2
	sta fLine.w3
	.endif

	.ifdef MAIN.@DEFINES.ROMOFF
	dec portb
	.endif


; ---	init_tabs

	ldy #0
	sty :bp2
	sty :bp2+1
it1
	lda :bp2+1
	sta adr.lineHi,y
	lda :bp2
	sta adr.lineLo,y
	clc
	adc width
	sta :bp2
	scc
	inc :bp2+1

	iny
	bne it1

	mva #$55 _col+1

	ldx #3
	stx _and+1
	txa
l0	sta __oras,x
	asl @
	asl @
	dex
	bpl l0

	lda mode
	and #$0f
	cmp #8
	beq x8
	cmp #6
	beq x8

	jmp it2
x8
	mva #$ff _col+1

	ldx #7
	stx _and+1
	lda #1
l1	sta __oras,x
	asl @
	dex
	bpl l1

it2	tya
_and	and #3
	tax
	lda __oras,x
	eor #$ff
	sta adr.color_bits+$000,y ; color0
	lda __oras,x
_col	and #$55
	sta adr.color_bits+$100,y ; color1
	lda __oras,x
	and #$aa
	sta adr.color_bits+$200,y ; color2
	lda __oras,x
	and #$ff
	sta adr.color_bits+$300,y ; color3
	tya
	lsr @
_nop	lsr @
	sta adr.div4,y
	iny
	bne it2

	jmp stop

__oras	dta $c0,$30,$0c,$03
	dta 0,0,0,0

stop	pla:tax

; optimize OK (FASTGRAPH), line = 1355

	lda ATARI.SAVMSC
	sta SETACTIVEBUFFER.@010181000.A
	lda ATARI.SAVMSC+1
	sta SETACTIVEBUFFER.@010181000.A+1
	jsr SETACTIVEBUFFER.@010181000

; ------------------------------------------------------------

MODE	= DATAORIGIN+$0746
adr.TLSHC	= CODEORIGIN+$0000
.var TLSHC	= adr.TLSHC .word
adr.TMCCN	= CODEORIGIN+$0010
.var TMCCN	= adr.TMCCN .word
adr.TMRCN	= CODEORIGIN+$0020
.var TMRCN	= adr.TMRCN .word
WIDTH	= DATAORIGIN+$0747
@CASETMP_0004	= DATAORIGIN+$0748

@VarData	= MODE
@VarDataSize	= 3

@exit
	.ifdef @new
	lda <@VarData
	sta :ztmp
	lda >@VarData
	ldy #@VarDataSize-1
	jmp @FreeMem
	els
	rts						; ret
	eif
.endl
.endl							; overload

; ------------------------------------------------------------

WIN_LEFT	= DATAORIGIN+$000C
WIN_RIGHT	= DATAORIGIN+$000E
WIN_TOP	= DATAORIGIN+$0010
WIN_BOTTOM	= DATAORIGIN+$0012
GRAPHRESULT	= DATAORIGIN+$0014
GETCOLOR	= DATAORIGIN+$0015
VIDEORAM	= DATAORIGIN+$0016
adr.LASTARCCOORDS	= DATAORIGIN+$0018	; [12] RECORD
.var LASTARCCOORDS	= adr.LASTARCCOORDS .word
LASTARCCOORDS.X	= DATAORIGIN+$0018
LASTARCCOORDS.Y	= DATAORIGIN+$001A
LASTARCCOORDS.XSTART	= DATAORIGIN+$001C
LASTARCCOORDS.YSTART	= DATAORIGIN+$001E
LASTARCCOORDS.XEND	= DATAORIGIN+$0020
LASTARCCOORDS.YEND	= DATAORIGIN+$0022
adr.COLOR_BITS	= [DATAORIGIN+$0024] .array [1024]
.var COLOR_BITS	= adr.COLOR_BITS .word
adr.LINELO	= [DATAORIGIN+$0424] .array [256]
.var LINELO	= adr.LINELO .word
adr.LINEHI	= [DATAORIGIN+$0524] .array [256]
.var LINEHI	= adr.LINEHI .word
adr.DIV4	= [DATAORIGIN+$0624] .array [256]
.var DIV4	= adr.DIV4 .word
CURRENTX	= DATAORIGIN+$0724
CURRENTY	= DATAORIGIN+$0726

.endl							; UNIT FASTGRAPH

.local	B						; PROCEDURE

; optimize OK (image.pas), line = 17

	lda X1
	cmp X2
	jne l_0325

; optimize OK (image.pas), line = 19

	sta XW

; optimize OK (image.pas), line = 20

	lda X2
	sta X
l_0325

; optimize OK (image.pas), line = 22

	lda X1
	cmp X2
	jcs l_0348

; optimize OK (image.pas), line = 24

	sta X

; optimize OK (image.pas), line = 25

	lda X2
	sta XW
l_0348

; optimize OK (image.pas), line = 27

	lda X2
	cmp X1
	jcs l_036B

; optimize OK (image.pas), line = 29

	sta X

; optimize OK (image.pas), line = 30

	lda X1
	sta XW
l_036B

; optimize OK (image.pas), line = 32

	lda Y1
	cmp Y2
	jcs l_038E

; optimize OK (image.pas), line = 34

	sta Y

; optimize OK (image.pas), line = 35

	lda Y2
	sta YH
l_038E

; optimize OK (image.pas), line = 37

	lda Y2
	cmp Y1
	jcs l_03B1

; optimize OK (image.pas), line = 39

	sta Y

; optimize OK (image.pas), line = 40

	lda Y1
	sta YH
l_03B1

; optimize OK (image.pas), line = 43

	lda FASTGRAPH.GETCOLOR
	sta C

; optimize OK (image.pas), line = 45

	lda Y1
	cmp Y2
	jne l_03DA

; optimize OK (image.pas), line = 47

	sta Y

; optimize OK (image.pas), line = 48

	lda Y2
	sta YH
l_03DA

; optimize OK (image.pas), line = 50

	lda X
	cmp XW
	jeq l_03FD

; optimize OK (image.pas), line = 52

	lda C
	jeq l_0410

; optimize OK (image.pas), line = 54

	lda #$00
	jsr FASTGRAPH.SETCOLOR

; optimize OK (image.pas), line = 55

	lda #$00
	sta INE
	sta INE+1
	lda YH
	sub Y
	sta @FORTMP_0421_0
	lda #$00
	sbc #$00
	sta @FORTMP_0421_1

l_0424
; --- ForToDoCondition
	lda @FORTMP_0421_1::#$00
	cmp INE+1
	bne @+
	lda @FORTMP_0421_0::#$00
	cmp INE
@
	jcc l_0430

; optimize OK (image.pas), line = 57

	lda Y
	add INE
	sta FASTGRAPH.HLINE.Y
	lda #$00
	adc INE+1
	sta FASTGRAPH.HLINE.Y+1
	lda X
	sta FASTGRAPH.HLINE.X0
	lda #$00
	sta FASTGRAPH.HLINE.X0+1
	lda XW
	sta FASTGRAPH.HLINE.X1
	lda #$00
	sta FASTGRAPH.HLINE.X1+1
	jsr FASTGRAPH.HLINE

; --- ForToDoEpilog
	inc INE
	jne l_0424
	inc INE+1
	jne l_0424
l_0430
l_0410

; optimize OK (image.pas), line = 60

	lda C
	jsr FASTGRAPH.SETCOLOR

; optimize OK (image.pas), line = 61

	lda #$00
	sta INE
	sta INE+1
	lda YH
	sub Y
	sta @FORTMP_0458_0
	lda #$00
	sbc #$00
	sta @FORTMP_0458_1

l_045B
; --- ForToDoCondition
	lda @FORTMP_0458_1::#$00
	cmp INE+1
	bne @+
	lda @FORTMP_0458_0::#$00
	cmp INE
@
	jcc l_0467

; optimize OK (image.pas), line = 63

	lda Y
	add INE
	sta FASTGRAPH.HLINE.Y
	lda #$00
	adc INE+1
	sta FASTGRAPH.HLINE.Y+1
	lda X
	sta FASTGRAPH.HLINE.X0
	lda #$00
	sta FASTGRAPH.HLINE.X0+1
	lda XW
	sta FASTGRAPH.HLINE.X1
	lda #$00
	sta FASTGRAPH.HLINE.X1+1
	jsr FASTGRAPH.HLINE

; --- ForToDoEpilog
	inc INE
	jne l_045B
	inc INE+1
	jne l_045B
l_0467
l_03FD

; optimize OK (image.pas), line = 66

	lda X
	cmp XW
	jne l_0491

; optimize OK (image.pas), line = 68

	lda C
	jeq l_04A4

; optimize OK (image.pas), line = 70

	lda #$00
	jsr FASTGRAPH.SETCOLOR

; optimize OK (image.pas), line = 71

	lda X
	sta FASTGRAPH.LINE.@040184000018400001840000184000.X1
	lda #$00
	sta FASTGRAPH.LINE.@040184000018400001840000184000.X1+1
	lda Y
	sta FASTGRAPH.LINE.@040184000018400001840000184000.Y1
	lda #$00
	sta FASTGRAPH.LINE.@040184000018400001840000184000.Y1+1
	lda XW
	sta FASTGRAPH.LINE.@040184000018400001840000184000.X2
	lda #$00
	sta FASTGRAPH.LINE.@040184000018400001840000184000.X2+1
	lda YH
	sta FASTGRAPH.LINE.@040184000018400001840000184000.Y2
	lda #$00
	sta FASTGRAPH.LINE.@040184000018400001840000184000.Y2+1
	jsr FASTGRAPH.LINE.@040184000018400001840000184000
l_04A4

; optimize OK (image.pas), line = 73

	lda C
	jsr FASTGRAPH.SETCOLOR

; optimize OK (image.pas), line = 74

	lda X
	sta FASTGRAPH.LINE.@040184000018400001840000184000.X1
	lda #$00
	sta FASTGRAPH.LINE.@040184000018400001840000184000.X1+1
	lda Y
	sta FASTGRAPH.LINE.@040184000018400001840000184000.Y1
	lda #$00
	sta FASTGRAPH.LINE.@040184000018400001840000184000.Y1+1
	lda XW
	sta FASTGRAPH.LINE.@040184000018400001840000184000.X2
	lda #$00
	sta FASTGRAPH.LINE.@040184000018400001840000184000.X2+1
	lda YH
	sta FASTGRAPH.LINE.@040184000018400001840000184000.Y2
	lda #$00
	sta FASTGRAPH.LINE.@040184000018400001840000184000.Y2+1
	jsr FASTGRAPH.LINE.@040184000018400001840000184000
l_0491

; ------------------------------------------------------------

X1	= DATAORIGIN+$0759
Y1	= DATAORIGIN+$075A
X2	= DATAORIGIN+$075B
Y2	= DATAORIGIN+$075C
INE	= DATAORIGIN+$075D
C	= DATAORIGIN+$075F
X	= DATAORIGIN+$0760
Y	= DATAORIGIN+$0761
XW	= DATAORIGIN+$0762
YH	= DATAORIGIN+$0763

@VarData	= X1
@VarDataSize	= 11

@exit
	.ifdef @new
	lda <@VarData
	sta :ztmp
	lda >@VarData
	ldy #@VarDataSize-1
	jmp @FreeMem
	els
	rts						; ret
	eif
.endl
l_0004

; optimize OK (image.pas), line = 80

	lda #$1F
	jsr FASTGRAPH.INITGRAPH.@010180000

; optimize OK (image.pas), line = 81

	lda #$03
	jsr FASTGRAPH.SETCOLOR

; optimize OK (image.pas), line = 82

	lda #$00
	sta B.X1
	sta B.Y1
	lda #$A0
	sta B.X2
	lda #$C0
	sta B.Y2
	jsr B

; optimize OK (image.pas), line = 83

	lda #$01
	jsr FASTGRAPH.SETCOLOR

; optimize OK (image.pas), line = 84

	lda #$00
	sta I
	sta I+1
	sta I+2
	sta I+3

l_04DE
; --- ForToDoCondition
	lda I+1
	cmp #$02
	bcc @+
	jne l_04EA
	lda I
	cmp #$83
	bcc @+
	jne l_04EA
@

; optimize OK (image.pas), line = 86

	lda #$04
	sta :ecx
	lda #$00
	sta :ecx+1
	lda I
	sta :eax
	lda I+1
	sta :eax+1
	.ifdef fmulinit
	fmulu_16
	els
	imulCX
	eif
	lda DATA_65FADAA9_1
	add :eax
	sta :bp2
	lda DATA_65FADAA9_1+1
	adc :eax+1
	sta :bp2+1
	ldy #$03
	lda (:bp2),y
	sta :STACKORIGIN+9
	lda #$04
	sta :ecx
	lda #$00
	sta :ecx+1
	lda I
	sta :eax
	lda I+1
	sta :eax+1
	.ifdef fmulinit
	fmulu_16
	els
	imulCX
	eif
	lda DATA_65FADAA9_1
	add :eax
	sta :bp2
	lda DATA_65FADAA9_1+1
	adc :eax+1
	sta :bp2+1
	ldy #$02
	lda (:bp2),y
	sta :STACKORIGIN+10
	lda #$04
	sta :ecx
	lda #$00
	sta :ecx+1
	lda I
	sta :eax
	lda I+1
	sta :eax+1
	.ifdef fmulinit
	fmulu_16
	els
	imulCX
	eif
	lda DATA_65FADAA9_1
	add :eax
	sta :bp2
	lda DATA_65FADAA9_1+1
	adc :eax+1
	sta :bp2+1
	ldy #$01
	lda (:bp2),y
	sta :STACKORIGIN+11
	lda #$04
	sta :ecx
	lda #$00
	sta :ecx+1
	lda I
	sta :eax
	lda I+1
	sta :eax+1
	.ifdef fmulinit
	fmulu_16
	els
	imulCX
	eif
	lda :eax
	add DATA_65FADAA9_1
	tay
	lda DATA_65FADAA9_1+1
	adc :eax+1
	sta :bp+1
	lda (:bp),y
	sta B.X1
	lda :STACKORIGIN+11
	sta B.Y1
	lda :STACKORIGIN+10
	sta B.X2
	lda :STACKORIGIN+9
	sta B.Y2
	jsr B

; --- ForToDoEpilog
	inc I
	jne l_04DE
	inc I+1
	jne l_04DE
l_04EA

; optimize OK (image.pas), line = 88

	lda #$02
	jsr FASTGRAPH.SETCOLOR

; optimize OK (image.pas), line = 89

	lda #$00
	sta I
	sta I+1
	sta I+2
	sta I+3

l_0527
; --- ForToDoCondition
	lda I+1
	cmp #$02
	bcc @+
	jne l_0533
	lda I
	cmp #$ED
	bcc @+
	jne l_0533
@

; optimize OK (image.pas), line = 91

	lda #$04
	sta :ecx
	lda #$00
	sta :ecx+1
	lda I
	sta :eax
	lda I+1
	sta :eax+1
	.ifdef fmulinit
	fmulu_16
	els
	imulCX
	eif
	lda DATA_65FADAA9_2
	add :eax
	sta :bp2
	lda DATA_65FADAA9_2+1
	adc :eax+1
	sta :bp2+1
	ldy #$03
	lda (:bp2),y
	sta :STACKORIGIN+9
	lda #$04
	sta :ecx
	lda #$00
	sta :ecx+1
	lda I
	sta :eax
	lda I+1
	sta :eax+1
	.ifdef fmulinit
	fmulu_16
	els
	imulCX
	eif
	lda DATA_65FADAA9_2
	add :eax
	sta :bp2
	lda DATA_65FADAA9_2+1
	adc :eax+1
	sta :bp2+1
	ldy #$02
	lda (:bp2),y
	sta :STACKORIGIN+10
	lda #$04
	sta :ecx
	lda #$00
	sta :ecx+1
	lda I
	sta :eax
	lda I+1
	sta :eax+1
	.ifdef fmulinit
	fmulu_16
	els
	imulCX
	eif
	lda DATA_65FADAA9_2
	add :eax
	sta :bp2
	lda DATA_65FADAA9_2+1
	adc :eax+1
	sta :bp2+1
	ldy #$01
	lda (:bp2),y
	sta :STACKORIGIN+11
	lda #$04
	sta :ecx
	lda #$00
	sta :ecx+1
	lda I
	sta :eax
	lda I+1
	sta :eax+1
	.ifdef fmulinit
	fmulu_16
	els
	imulCX
	eif
	lda :eax
	add DATA_65FADAA9_2
	tay
	lda DATA_65FADAA9_2+1
	adc :eax+1
	sta :bp+1
	lda (:bp),y
	sta B.X1
	lda :STACKORIGIN+11
	sta B.Y1
	lda :STACKORIGIN+10
	sta B.X2
	lda :STACKORIGIN+9
	sta B.Y2
	jsr B

; --- ForToDoEpilog
	inc I
	jne l_0527
	inc I+1
	jne l_0527
l_0533

; optimize OK (image.pas), line = 93

	lda #$00
	jsr FASTGRAPH.SETCOLOR

; optimize OK (image.pas), line = 94

	lda #$00
	sta I
	sta I+1
	sta I+2
	sta I+3

l_0570
; --- ForToDoCondition
	lda I
	cmp #$E0
	jcs l_057E

; optimize OK (image.pas), line = 96

	lda #$04
	sta :ecx
	lda #$00
	sta :ecx+1
	lda I
	sta :eax
	lda I+1
	sta :eax+1
	.ifdef fmulinit
	fmulu_16
	els
	imulCX
	eif
	lda DATA_65FADAA9_0
	add :eax
	sta :bp2
	lda DATA_65FADAA9_0+1
	adc :eax+1
	sta :bp2+1
	ldy #$03
	lda (:bp2),y
	sta :STACKORIGIN+9
	lda #$04
	sta :ecx
	lda #$00
	sta :ecx+1
	lda I
	sta :eax
	lda I+1
	sta :eax+1
	.ifdef fmulinit
	fmulu_16
	els
	imulCX
	eif
	lda DATA_65FADAA9_0
	add :eax
	sta :bp2
	lda DATA_65FADAA9_0+1
	adc :eax+1
	sta :bp2+1
	ldy #$02
	lda (:bp2),y
	sta :STACKORIGIN+10
	lda #$04
	sta :ecx
	lda #$00
	sta :ecx+1
	lda I
	sta :eax
	lda I+1
	sta :eax+1
	.ifdef fmulinit
	fmulu_16
	els
	imulCX
	eif
	lda DATA_65FADAA9_0
	add :eax
	sta :bp2
	lda DATA_65FADAA9_0+1
	adc :eax+1
	sta :bp2+1
	ldy #$01
	lda (:bp2),y
	sta :STACKORIGIN+11
	lda #$04
	sta :ecx
	lda #$00
	sta :ecx+1
	lda I
	sta :eax
	lda I+1
	sta :eax+1
	.ifdef fmulinit
	fmulu_16
	els
	imulCX
	eif
	lda :eax
	add DATA_65FADAA9_0
	tay
	lda DATA_65FADAA9_0+1
	adc :eax+1
	sta :bp+1
	lda (:bp),y
	sta B.X1
	lda :STACKORIGIN+11
	sta B.Y1
	lda :STACKORIGIN+10
	sta B.X2
	lda :STACKORIGIN+9
	sta B.Y2
	jsr B

; --- ForToDoEpilog
	inc I
	jne l_0570
l_057E

; --- RepeatUntilProlog
l_05B1

; optimize OK (image.pas), line = 98

	jmp l_05B1

; ------------------------------------------------------------

adr.DATA_65FADAA9_1	= CODEORIGIN+$0030
.var DATA_65FADAA9_1	= adr.DATA_65FADAA9_1 .word
adr.DATA_65FADAA9_2	= CODEORIGIN+$0A40
.var DATA_65FADAA9_2	= adr.DATA_65FADAA9_2 .word
adr.DATA_65FADAA9_0	= CODEORIGIN+$15F8
.var DATA_65FADAA9_0	= adr.DATA_65FADAA9_0 .word
I	= DATAORIGIN+$0755
@exit

@halt	ldx #$00
	txs

	.ifdef MAIN.@DEFINES.ROMOFF
	inc portb
	.fi

	ldy #$01

	rts

; ------------------------------------------------------------

.local	@DEFINES
ATARI
CPU_6502
.endl

.local	@RESOURCE
.endl

.endl							; MAIN

; ------------------------------------------------------------
; ------------------------------------------------------------

.macro	UNITINITIALIZATION

	.ifdef MAIN.SYSTEM.@UnitInit
	jsr MAIN.SYSTEM.@UnitInit
	.fi

	.ifdef MAIN.ATARI.@UnitInit
	jsr MAIN.ATARI.@UnitInit
	.fi

	.ifdef MAIN.CRT.@UnitInit
	jsr MAIN.CRT.@UnitInit
	.fi

	.ifdef MAIN.TYPES.@UnitInit
	jsr MAIN.TYPES.@UnitInit
	.fi

	.ifdef MAIN.FASTGRAPH.@UnitInit
	jsr MAIN.FASTGRAPH.@UnitInit
	.fi
.endm

; ------------------------------------------------------------

	ift .SIZEOF(MAIN.SYSTEM) > 0
	.print 'SYSTEM: ',MAIN.SYSTEM,'..',MAIN.SYSTEM+.SIZEOF(MAIN.SYSTEM)-1
	eif

	ift .SIZEOF(MAIN.ATARI) > 0
	.print 'ATARI: ',MAIN.ATARI,'..',MAIN.ATARI+.SIZEOF(MAIN.ATARI)-1
	eif

	ift .SIZEOF(MAIN.CRT) > 0
	.print 'CRT: ',MAIN.CRT,'..',MAIN.CRT+.SIZEOF(MAIN.CRT)-1
	eif

	ift .SIZEOF(MAIN.TYPES) > 0
	.print 'TYPES: ',MAIN.TYPES,'..',MAIN.TYPES+.SIZEOF(MAIN.TYPES)-1
	eif

	ift .SIZEOF(MAIN.FASTGRAPH) > 0
	.print 'FASTGRAPH: ',MAIN.FASTGRAPH,'..',MAIN.FASTGRAPH+.SIZEOF(MAIN.FASTGRAPH)-1
	eif

.nowarn	.print 'CODE: ',CODEORIGIN,'..',MAIN.@RESOURCE-1

; ------------------------------------------------------------

	?adr = *
	ift (?adr < ?old_adr) && (?old_adr - ?adr < $120)
	?adr = ?old_adr
	eif

	org ?adr
	?old_adr = *

DATAORIGIN
.by  $2D $0C $00 $00 $00 $28 $00 $18  $00 $00 $00 $00 $00 $00 $27 $00  $00 $00 $17

VARINITSIZE	= *-DATAORIGIN
VARDATASIZE	= 1896

PROGRAMSTACK	= DATAORIGIN+VARDATASIZE

	.print 'DATA: ',DATAORIGIN,'..',PROGRAMSTACK

	run START

; ------------------------------------------------------------

.macro	STATICDATA
.by  $03 $02 $02 $01 $01 $02 $02 $03  $03 $03 $03 $03 $03 $03 $02 $03  $28 $14 $14 $28 $50 $50 $A0 $A0
.by  $40 $50 $50 $50 $28 $28 $A0 $A0  $18 $18 $0C $18 $30 $30 $60 $60  $C0 $C0 $C0 $C0 $18 $0C $C0 $C0
.by  $00 $00 $9F $01 $23 $02 $9F $11  $6C $12 $9F $18 $6D $19 $9F $20  $88 $21 $9F $26 $86 $2F $9F $5F
.by  $8D $60 $9F $63 $8F $64 $9F $66  $94 $67 $9F $67 $95 $68 $9F $6E  $9A $6F $9F $BF $88 $29 $9F $2E
.by  $89 $27 $9F $28 $4F $70 $99 $71  $5B $72 $99 $72 $69 $73 $99 $73  $7B $74 $99 $74 $88 $75 $99 $75
.by  $8F $76 $99 $7E $94 $7F $99 $8C  $96 $8D $99 $BF $91 $8E $95 $8F  $93 $90 $95 $90 $81 $92 $95 $95
.by  $82 $96 $95 $9F $83 $A0 $95 $AA  $84 $AB $95 $B4 $85 $B5 $95 $B6  $86 $B7 $95 $BA $87 $BB $95 $BF
.by  $8B $8D $94 $8D $54 $80 $93 $85  $81 $86 $93 $86 $86 $87 $93 $87  $89 $88 $93 $89 $8C $8A $93 $8A
.by  $8E $8B $93 $8B $55 $7F $92 $7F  $8E $91 $94 $91 $8E $8C $91 $8C  $8E $8E $90 $8E $89 $90 $91 $90
.by  $87 $77 $8E $7A $8C $7B $8E $7E  $87 $8F $8E $8F $84 $76 $8D $76  $8A $61 $8C $61 $8C $62 $8C $62
.by  $89 $8C $8C $8C $86 $8B $8B $8B  $86 $8E $8B $8E $81 $91 $8B $91  $85 $8A $89 $8A $83 $8D $89 $8D
.by  $87 $8C $87 $8C $81 $90 $87 $90  $6D $21 $86 $22 $6D $23 $85 $25  $7B $56 $85 $5C $81 $89 $85 $89
.by  $80 $8F $85 $8F $6D $26 $84 $28  $83 $54 $85 $55 $79 $8B $84 $8C  $80 $8E $84 $8E $6D $29 $83 $2B
.by  $81 $B2 $83 $B3 $6D $2C $82 $2D  $7A $88 $82 $88 $82 $A6 $82 $A7  $82 $AA $82 $AA $7F $B1 $82 $B1
.by  $6D $2E $81 $2F $6E $30 $81 $30  $74 $3C $81 $3E $81 $87 $81 $87  $81 $8A $81 $8A $7F $B0 $81 $B0
.by  $6D $31 $80 $32 $75 $3F $81 $3F  $71 $41 $80 $42 $7E $43 $80 $43  $7C $8D $80 $8D $80 $AB $80 $AB
.by  $80 $B3 $80 $B3 $6C $33 $7F $34  $6D $35 $7F $36 $75 $40 $80 $40  $7E $89 $7F $8A $6C $37 $7E $38
.by  $7B $8E $7E $8E $7E $A4 $7E $A5  $7E $B4 $7E $B4 $6C $39 $7D $39  $6E $3A $7D $3A $7C $8A $7D $8A
.by  $79 $8F $7D $8F $72 $3B $7D $3B  $78 $90 $7B $90 $76 $43 $7C $45  $76 $8D $7A $8D $76 $91 $79 $91
.by  $77 $AE $79 $AE $78 $AF $79 $B0  $79 $B6 $79 $B6 $6E $47 $7B $47  $78 $8C $78 $8C $75 $8E $78 $8E
.by  $77 $B1 $78 $B1 $78 $B5 $78 $B5  $73 $8F $77 $8F $6F $92 $77 $92  $77 $B0 $77 $B0 $76 $B2 $77 $B4
.by  $76 $95 $76 $95 $76 $A8 $76 $A9  $75 $B5 $76 $B5 $72 $90 $75 $90  $73 $93 $76 $93 $71 $94 $75 $94
.by  $6F $91 $74 $91 $71 $95 $73 $95  $73 $B7 $73 $B7 $6F $96 $72 $96  $72 $99 $72 $99 $70 $77 $79 $77
.by  $6D $93 $71 $93 $6D $97 $71 $97  $70 $43 $70 $43 $6F $B9 $70 $B9  $6E $3B $6F $3C $6B $40 $6F $41
.by  $6C $94 $6F $94 $6C $98 $6F $98  $6F $BA $6F $BA $6A $95 $6E $95  $6D $3C $6D $3C $64 $99 $6D $99
.by  $6C $1A $6C $1E $6C $3F $6E $3F  $69 $96 $6C $96 $68 $9A $6C $9A  $67 $97 $6B $97 $67 $98 $69 $98
.by  $67 $9B $6A $9B $66 $9C $69 $9C  $25 $12 $6A $13 $26 $14 $6A $14  $26 $15 $69 $16 $26 $17 $68 $17
.by  $28 $18 $68 $18 $40 $56 $6F $58  $3E $59 $6E $59 $40 $5A $6A $5E  $63 $9A $66 $9A $64 $9D $67 $9D
.by  $63 $9E $66 $9E $29 $19 $67 $19  $2A $1A $67 $1A $2B $1B $67 $1C  $4B $53 $71 $55 $3F $5F $68 $5F
.by  $2C $1D $67 $1D $2D $1E $66 $1E  $2D $1F $65 $1F $62 $9B $64 $9B  $61 $9F $64 $9F $2F $20 $64 $21
.by  $30 $22 $63 $22 $31 $23 $63 $23  $51 $4E $6A $4F $60 $9C $63 $9C  $32 $24 $62 $24 $33 $25 $62 $26
.by  $4E $50 $69 $50 $3E $61 $68 $63  $5E $9D $62 $9D $5F $A0 $62 $A0  $34 $27 $61 $28 $36 $29 $61 $29
.by  $37 $2A $60 $2A $38 $2B $60 $2C  $3A $2D $60 $2D $4D $51 $68 $52  $5D $9E $60 $9E $5E $A1 $61 $A1
.by  $3A $2E $5F $2F $5D $A2 $5F $A2  $3B $30 $5E $31 $3E $32 $5E $33  $5C $9F $5E $9F $5C $A3 $5E $A3
.by  $3F $34 $5D $34 $41 $35 $5D $39  $3F $60 $67 $60 $5A $A4 $5D $A5  $3E $3A $5C $3C $53 $4D $6C $4D
.by  $5A $A0 $5D $A0 $5B $9E $5B $9E  $59 $A1 $5B $A1 $57 $A6 $5B $A6  $5A $B8 $5B $B8 $3E $3D $5A $3E
.by  $58 $A2 $5A $A2 $5A $A3 $5A $A3  $3E $3F $59 $3F $56 $A7 $59 $A7  $59 $A8 $59 $A9 $3D $40 $58 $41
.by  $55 $A3 $58 $A4 $58 $A5 $59 $A5  $39 $42 $57 $42 $54 $A8 $57 $A8  $53 $A5 $56 $A5 $52 $A9 $56 $AA
.by  $54 $A4 $54 $A4 $51 $A6 $54 $A6  $52 $78 $53 $78 $52 $7A $56 $7A  $4F $7B $55 $7C $4C $7D $54 $7D
.by  $4A $7E $53 $7F $4F $AB $53 $AB  $53 $AD $53 $AD $50 $79 $52 $79  $4F $A7 $53 $A7 $4E $A8 $52 $A8
.by  $48 $80 $52 $80 $4E $AC $51 $AC  $4A $81 $51 $81 $50 $A5 $50 $A5  $4C $AD $50 $AD $4F $64 $8D $6E
.by  $4D $A9 $50 $A9 $4E $6D $4E $6D  $4D $A6 $4E $A6 $4B $AA $4E $AA  $49 $AF $4E $AF $4B $AE $4E $AE
.by  $4D $B1 $4D $B1 $49 $6B $4C $6B  $4C $6D $4C $6E $49 $AB $4D $AB  $48 $B0 $4C $B0 $48 $AC $4C $AC
.by  $48 $6C $4A $6C $46 $AD $4A $AD  $45 $B1 $4A $B1 $45 $AE $49 $AE  $44 $B2 $49 $B2 $46 $70 $49 $70
.by  $43 $B3 $47 $B3 $42 $B4 $46 $B4  $43 $AF $47 $AF $42 $B0 $45 $B0  $3F $B1 $43 $B1 $3F $B6 $43 $B6
.by  $42 $AD $42 $AE $3D $B2 $42 $B2  $40 $B5 $43 $B5 $40 $AE $41 $AE  $3C $B3 $41 $B3 $3D $B7 $41 $B7
.by  $3F $36 $40 $36 $3C $B8 $40 $B8  $3F $B9 $3F $B9 $3E $37 $3E $38  $3B $B4 $3F $B4 $39 $7C $49 $7C
.by  $39 $7D $47 $7D $3A $B5 $3D $B5  $39 $B9 $3D $BA $3A $3B $3C $3B  $3C $41 $3C $41 $38 $43 $3C $43
.by  $3C $44 $3C $44 $38 $B6 $3C $B6  $3C $BC $3C $BC $3B $33 $3B $34  $39 $6C $3D $6C $37 $BB $3B $BB
.by  $3A $34 $3A $34 $39 $36 $3A $36  $38 $44 $3A $44 $3A $45 $3A $45  $39 $63 $3D $65 $3A $6D $3C $6D
.by  $3A $6E $3B $6E $3A $B1 $3A $B1  $3A $B3 $3A $B3 $37 $B7 $3A $B7  $3A $B8 $3A $B8 $35 $BC $3A $BC
.by  $39 $37 $39 $38 $37 $6F $3A $70  $38 $38 $38 $38 $38 $64 $38 $68  $38 $AF $38 $B0 $35 $B8 $38 $B8
.by  $37 $2C $37 $2C $36 $39 $37 $39  $36 $45 $38 $45 $32 $46 $37 $46  $36 $71 $38 $72 $31 $79 $38 $7B
.by  $34 $B9 $37 $BA $33 $BD $38 $BD  $32 $BE $37 $BE $36 $3A $36 $3A  $35 $44 $36 $44 $36 $47 $36 $47
.by  $35 $4C $36 $4C $36 $B6 $36 $B6  $34 $3B $35 $3B $31 $3D $35 $3D  $35 $3E $35 $3E $35 $65 $37 $68
.by  $35 $6E $35 $70 $35 $72 $35 $78  $35 $7C $35 $86 $30 $BF $35 $BF  $34 $2A $34 $2A $34 $3C $34 $3C
.by  $34 $3F $34 $3F $34 $72 $34 $72  $31 $87 $34 $88 $33 $B6 $34 $B6  $34 $B7 $34 $B7 $33 $2D $33 $2D
.by  $33 $3E $33 $3E $2F $47 $34 $47  $33 $49 $33 $49 $33 $4C $33 $4C  $33 $66 $34 $6A $33 $6D $34 $6D
.by  $31 $73 $33 $73 $33 $83 $34 $85  $32 $BA $33 $BC $2E $84 $32 $84  $32 $85 $32 $86 $31 $25 $31 $26
.by  $31 $3E $31 $3E $2D $7F $34 $80  $30 $86 $31 $86 $2F $BC $31 $BD  $2E $2D $30 $2D $30 $46 $30 $46
.by  $2F $48 $32 $48 $30 $4D $30 $4D  $30 $69 $32 $6C $2C $BE $30 $BE  $2D $49 $30 $49 $2F $6A $2F $73
.by  $2E $85 $2F $85 $2F $89 $31 $8C  $2F $BA $2F $BA $2D $23 $2E $23  $2C $26 $2E $26 $2C $4A $2E $4B
.by  $2D $BD $2E $BD $2A $BF $2E $BF  $2D $20 $2D $22 $2B $41 $2D $41  $2D $4C $2D $4C $2D $6D $2E $6F
.by  $2A $27 $2C $27 $2C $2E $2C $2E  $2B $31 $2C $31 $28 $42 $2B $42  $29 $51 $2B $53 $2A $54 $2B $54
.by  $2B $71 $2C $72 $29 $1F $2A $1F  $2A $20 $2A $20 $27 $43 $2A $43  $29 $4B $2B $4B $2A $4E $2A $4E
.by  $2A $73 $2B $73 $29 $1E $29 $1E  $29 $21 $29 $23 $28 $41 $29 $41  $27 $44 $29 $44 $26 $50 $29 $50
.by  $29 $75 $2A $76 $28 $22 $28 $22  $26 $4C $29 $4D $22 $4E $28 $4E  $27 $4F $28 $4F $28 $53 $28 $54
.by  $28 $78 $29 $78 $28 $7D $28 $7D  $27 $20 $27 $21 $27 $49 $27 $4A  $26 $18 $26 $18 $25 $4B $26 $4B
.by  $25 $16 $25 $16 $25 $1E $25 $1E  $23 $49 $25 $49 $24 $4A $25 $4A  $24 $4C $25 $4C $24 $4D $24 $4D
.by  $22 $4F $25 $4F $23 $62 $24 $63  $23 $19 $23 $19 $23 $28 $23 $28  $23 $45 $23 $48 $23 $61 $23 $61
.by  $23 $7B $23 $7B $22 $04 $22 $0F  $22 $1B $22 $1B $22 $21 $22 $21  $22 $26 $22 $26 $22 $46 $22 $48
.by  $20 $4B $22 $4B $22 $7F $22 $7F  $22 $95 $22 $95 $07 $02 $21 $03  $21 $05 $21 $0E $1F $19 $21 $19
.by  $20 $1A $21 $1A $21 $1E $21 $1E  $20 $30 $21 $30 $21 $40 $21 $40  $21 $4A $21 $4A $20 $4C $21 $4C
.by  $20 $50 $23 $50 $21 $51 $21 $52  $20 $5B $21 $5B $20 $80 $21 $80  $16 $06 $20 $07 $1C $08 $20 $08
.by  $1D $09 $20 $0A $1F $0B $20 $0C  $20 $0D $20 $0D $20 $4E $20 $4E  $20 $59 $20 $5A $20 $7F $20 $7F
.by  $0F $04 $20 $04 $1C $52 $1F $53  $1F $54 $1F $54 $1E $76 $1F $76  $17 $05 $1F $05 $1E $1A $1E $1C
.by  $1D $2E $1E $2E $1E $80 $1E $81  $18 $16 $1D $16 $1A $5D $1D $5D  $1C $62 $1D $63 $1C $68 $1D $6B
.by  $1C $72 $1D $72 $1C $1B $1C $1B  $1C $43 $1C $43 $18 $54 $1C $54  $1B $5E $1C $5F $18 $70 $1C $70
.by  $1C $71 $1C $71 $1C $73 $1C $73  $1A $53 $1B $53 $1B $59 $1B $5C  $1A $6E $1B $6F $16 $55 $1A $55
.by  $1A $57 $1A $57 $1A $5A $1A $5A  $1A $60 $1A $60 $19 $73 $1A $73  $1A $8C $1D $96 $1A $B4 $1A $B4
.by  $19 $1F $19 $1F $17 $32 $19 $32  $19 $51 $19 $51 $15 $6A $19 $6A  $16 $6B $19 $6D $19 $6F $19 $6F
.by  $18 $71 $19 $71 $19 $72 $19 $72  $19 $76 $19 $76 $17 $8D $19 $8D  $0E $09 $18 $09 $18 $1D $18 $1D
.by  $16 $33 $18 $33 $18 $53 $18 $53  $15 $56 $18 $56 $15 $68 $18 $68  $15 $6E $18 $6E $17 $8E $18 $8E
.by  $17 $0A $17 $0A $16 $2B $17 $2B  $17 $34 $17 $35 $15 $69 $17 $69  $15 $74 $17 $74 $16 $90 $19 $90
.by  $12 $08 $19 $08 $16 $2C $16 $2C  $15 $35 $16 $35 $13 $57 $16 $57  $15 $5D $16 $5D $15 $75 $16 $75
.by  $16 $8F $16 $8F $16 $BC $16 $BC  $15 $07 $15 $07 $14 $1F $15 $1F  $15 $5E $15 $5E $15 $63 $15 $63
.by  $15 $6C $15 $6D $15 $6F $15 $6F  $15 $82 $15 $82 $15 $A2 $15 $A3  $14 $34 $14 $34 $12 $64 $14 $64
.by  $14 $6D $14 $6D $14 $B8 $14 $B8  $0B $0B $13 $0B $12 $20 $13 $20  $13 $38 $13 $39 $09 $65 $13 $65
.by  $0D $66 $13 $67 $13 $A5 $13 $A5  $0D $0A $14 $0A $12 $0E $12 $0E  $12 $1A $12 $1A $12 $34 $12 $35
.by  $0F $59 $12 $59 $12 $5C $12 $5D  $11 $60 $12 $62 $12 $63 $12 $63  $11 $68 $12 $69 $09 $0C $11 $0C
.by  $10 $58 $13 $58 $11 $5D $11 $5E  $11 $70 $11 $70 $10 $14 $10 $14  $0D $5A $10 $5A $10 $5B $10 $5B
.by  $0D $5E $10 $5F $0F $60 $0F $60  $0F $64 $0F $64 $05 $0E $0E $0E  $0D $29 $0E $2A $0E $39 $0E $39
.by  $0D $51 $0E $52 $0E $57 $0E $57  $0E $5C $0E $5D $0B $68 $0E $68  $09 $6A $0E $6A $0E $6D $0E $71
.by  $0E $A8 $0E $A8 $0B $5B $0D $5B  $0B $69 $0D $69 $0D $6E $0D $73  $0D $BE $0D $BE $0C $4E $0C $4E
.by  $09 $5C $0C $5C $0C $5D $0C $5D  $0C $60 $0C $63 $09 $67 $0C $67  $07 $6B $0C $6B $0A $6C $0C $6C
.by  $0C $72 $0C $72 $0C $BC $0C $BC  $07 $0D $0D $0D $09 $29 $0B $29  $0B $5F $0B $5F $0A $64 $0B $64
.by  $0B $6D $0B $6D $0A $7E $0B $7E  $0B $B4 $0B $B6 $0A $38 $0A $38  $09 $3A $0A $3B $0A $51 $0A $54
.by  $0A $56 $0A $56 $0A $5A $0A $5A  $05 $5D $0A $5E $0A $60 $0A $60  $09 $66 $0A $66 $0A $7C $0A $7D
.by  $09 $39 $09 $39 $08 $3C $09 $3C  $09 $52 $09 $54 $08 $57 $09 $57  $08 $63 $09 $63 $09 $AC $09 $AC
.by  $07 $0F $09 $0F $07 $2A $08 $2A  $08 $3D $08 $3D $06 $53 $08 $53  $07 $54 $08 $54 $08 $58 $08 $58
.by  $08 $5B $08 $5B $03 $5F $08 $5F  $06 $6C $08 $6D $00 $10 $07 $10  $07 $13 $07 $14 $07 $27 $07 $27
.by  $07 $2B $07 $2B $07 $4E $07 $52  $06 $55 $07 $55 $07 $5C $07 $5C  $07 $AB $07 $AD $00 $02 $06 $02
.by  $06 $14 $06 $14 $06 $4D $06 $4D  $06 $4F $06 $52 $05 $61 $06 $61  $06 $AE $06 $AE $04 $37 $05 $39
.by  $03 $51 $05 $51 $05 $57 $05 $58  $04 $67 $05 $67 $05 $AF $05 $AF  $04 $0D $04 $0D $03 $0F $05 $0F
.by  $03 $11 $04 $11 $03 $52 $04 $52  $03 $56 $04 $56 $00 $58 $04 $58  $03 $66 $04 $66 $04 $B0 $04 $B0
.by  $03 $0E $03 $0E $02 $1B $03 $1C  $02 $29 $03 $29 $02 $50 $03 $50  $03 $53 $03 $54 $02 $59 $03 $59
.by  $00 $61 $03 $61 $03 $64 $03 $64  $02 $76 $03 $77 $02 $7A $03 $7A  $02 $83 $03 $84 $00 $12 $02 $12
.by  $02 $2A $02 $2A $02 $4E $02 $4F  $00 $57 $02 $57 $01 $60 $04 $60  $02 $79 $02 $79 $00 $36 $01 $36
.by  $00 $3A $01 $3B $00 $5B $01 $5B  $00 $62 $01 $63 $00 $6E $01 $72  $00 $13 $00 $14 $00 $3C $00 $3D
.by  $00 $4A $00 $4C $00 $59 $00 $59  $9F $22 $9F $22 $9F $24 $9F $24  $9C $27 $9F $27 $9E $28 $9F $2D
.by  $9F $2E $9F $2E $9F $92 $9F $92  $9F $94 $9F $94 $9E $23 $9E $23  $9E $26 $9E $26 $9E $2F $9E $2F
.by  $9D $95 $9E $95 $9E $97 $9E $97  $9D $16 $9D $16 $9C $2A $9D $2A  $9D $2E $9D $2E $9B $93 $9D $93
.by  $9B $96 $9D $96 $9C $26 $9C $26  $9C $32 $9C $32 $81 $4F $9C $50  $82 $51 $9C $51 $9A $94 $9C $94
.by  $9C $97 $9C $97 $9B $28 $9B $28  $95 $33 $9B $33 $84 $52 $9B $52  $85 $53 $9B $53 $4F $6D $9B $6D
.by  $9B $91 $9B $91 $9A $2A $9A $2B  $99 $32 $9A $32 $83 $54 $9A $54  $50 $6E $9A $6E $99 $92 $9A $92
.by  $9A $95 $9A $95 $99 $2B $99 $2B  $95 $34 $99 $34 $96 $35 $99 $35  $99 $36 $99 $37 $81 $4E $99 $4E
.by  $4F $6C $99 $6C $99 $90 $99 $90  $99 $93 $99 $93 $98 $2C $98 $2C  $4E $6B $98 $6B $50 $6F $98 $70
.by  $97 $2E $97 $2E $94 $32 $97 $32  $97 $38 $97 $38 $4E $71 $97 $71  $96 $92 $97 $92 $97 $94 $97 $94
.by  $96 $2F $96 $2F $96 $3B $96 $3B  $81 $4D $96 $4D $4D $6A $96 $6A  $5B $72 $96 $72 $4A $69 $95 $69
.by  $69 $73 $95 $73 $94 $8E $95 $8E  $94 $93 $95 $93 $93 $12 $94 $12  $93 $14 $94 $14 $94 $36 $94 $36
.by  $93 $55 $94 $55 $7B $74 $94 $74  $93 $90 $94 $91 $92 $94 $94 $94  $93 $10 $93 $10 $93 $3F $93 $3F
.by  $81 $4C $93 $4C $4A $68 $93 $68  $92 $34 $92 $34 $92 $39 $92 $3D  $92 $40 $92 $40 $4B $67 $92 $67
.by  $88 $75 $92 $75 $92 $8E $92 $8E  $90 $92 $92 $92 $91 $11 $91 $11  $91 $13 $91 $13 $91 $36 $91 $37
.by  $8E $3B $91 $3B $8F $3C $91 $3C  $91 $41 $91 $41 $4C $66 $91 $66  $91 $8D $91 $8D $90 $90 $91 $90
.by  $8F $3A $90 $3A $8D $3D $90 $3D  $90 $3F $90 $3F $81 $4B $90 $4B  $4C $65 $90 $65 $8F $39 $8F $39
.by  $8E $8E $8F $8E $8F $91 $8F $91  $8C $12 $8E $12 $8E $41 $8E $41  $8E $45 $8E $45 $8D $55 $8E $55
.by  $8E $8C $8E $8C $8E $92 $8E $92  $8D $10 $8D $10 $8D $3C $8D $3C  $8D $40 $8D $40 $8D $43 $8D $43
.by  $81 $4A $8D $4A $4D $64 $8D $64  $8C $44 $8C $44 $8B $0F $8B $0F  $8B $11 $8B $11 $3B $63 $8B $63
.by  $8A $8F $8B $8F $8A $40 $8A $40  $88 $49 $8A $49 $89 $10 $89 $10  $87 $23 $89 $23 $61 $62 $89 $62
.by  $89 $8C $89 $8C $87 $22 $88 $22  $88 $24 $88 $26 $87 $29 $88 $2A  $88 $2C $88 $2C $86 $2F $88 $35
.by  $85 $37 $88 $37 $88 $8D $88 $8D  $86 $25 $87 $26 $87 $27 $87 $28  $86 $2B $87 $2B $85 $36 $87 $36
.by  $85 $38 $87 $38 $86 $39 $87 $40  $87 $5D $87 $61 $86 $8E $87 $8E  $86 $24 $86 $24 $86 $2E $86 $2E
.by  $84 $41 $86 $42 $85 $55 $86 $55  $85 $B8 $86 $B8 $86 $B9 $86 $BA  $85 $BC $86 $BE $85 $34 $85 $35
.by  $85 $3A $85 $40 $83 $43 $85 $43  $83 $45 $85 $49 $81 $61 $85 $61  $85 $8C $85 $8C $83 $B4 $85 $B4
.by  $85 $B5 $85 $B6 $84 $0D $84 $0D  $84 $3B $84 $40 $83 $44 $84 $44  $84 $BD $84 $BD $83 $40 $83 $40
.by  $83 $42 $83 $42 $83 $55 $83 $55  $80 $60 $83 $60 $83 $BC $83 $BC  $82 $47 $82 $49 $82 $89 $82 $89
.by  $80 $3B $81 $3B $80 $5F $81 $5F  $80 $BB $81 $BB $81 $BC $81 $BC  $80 $0B $80 $0B $80 $0D $80 $0D
.by  $80 $40 $80 $41 $80 $50 $80 $50  $7F $B0 $80 $B0 $80 $B5 $80 $B5  $7B $BD $80 $BD $7D $BE $80 $BE
.by  $80 $BF $80 $BF $7E $0C $7F $0C  $7F $3D $7F $3F $7F $4C $7F $4C  $6E $5E $7F $5E $7F $BA $7F $BA
.by  $7F $BC $7F $BC $7E $44 $7E $44  $7E $4D $7E $4D $6F $5D $7E $5D  $6D $5F $7E $61 $7D $3B $7D $42
.by  $71 $5C $85 $5C $7C $0B $7C $0B  $7C $3E $7C $45 $77 $08 $7B $08  $7B $40 $7B $47 $72 $5B $84 $5B
.by  $7B $BF $7B $BF $79 $0A $7A $0A  $7A $44 $7A $48 $6F $46 $79 $46  $79 $47 $79 $4C $72 $5A $79 $5A
.by  $72 $77 $79 $77 $79 $78 $79 $78  $62 $48 $78 $48 $73 $49 $78 $4F  $5B $79 $78 $79 $6E $47 $77 $47
.by  $6D $50 $77 $50 $74 $51 $77 $55  $73 $57 $77 $57 $72 $59 $77 $59  $76 $8D $77 $8D $73 $56 $76 $56
.by  $72 $58 $76 $58 $76 $93 $76 $93  $74 $09 $75 $09 $73 $45 $75 $45  $74 $44 $74 $44 $60 $52 $73 $53
.by  $73 $54 $73 $55 $70 $06 $72 $06  $72 $08 $72 $08 $72 $4A $72 $4F  $6B $51 $72 $51 $72 $92 $72 $92
.by  $71 $4B $71 $4F $66 $54 $71 $55  $6D $49 $70 $49 $70 $4C $70 $4F  $64 $56 $70 $56 $70 $77 $70 $77
.by  $70 $97 $70 $97 $6A $41 $6F $41  $6B $4A $6F $4B $6F $4D $6F $4F  $67 $57 $6F $58 $5B $78 $6F $78
.by  $6F $91 $6F $92 $6C $38 $6E $39  $6D $3F $6E $40 $68 $42 $6E $42  $67 $4C $6E $4C $6E $4E $6E $4F
.by  $67 $59 $6E $59 $6C $37 $6D $37  $6D $3E $6D $3E $67 $43 $6D $44  $6D $4F $6D $4F $66 $5A $6D $5B
.by  $6D $95 $6D $95 $6D $97 $6D $97  $6C $36 $6C $36 $6C $3A $6C $3A  $6B $40 $6C $40 $64 $45 $6C $45
.by  $5D $4D $6C $4D $63 $5C $6C $5C  $6C $60 $6C $61 $6B $04 $6B $04  $6A $06 $6B $06 $69 $11 $6B $11
.by  $64 $46 $6B $46 $62 $5D $6B $5D  $6A $61 $6B $61 $69 $12 $6A $14  $63 $47 $6A $47 $63 $49 $6A $49
.by  $69 $4B $6A $4B $64 $4E $6A $4F  $67 $5E $6A $5E $6A $9B $6A $9B  $68 $15 $69 $16 $63 $50 $69 $50
.by  $69 $9A $69 $9A $67 $05 $68 $05  $68 $13 $68 $14 $67 $17 $68 $18  $61 $51 $68 $51 $66 $5F $68 $5F
.by  $63 $61 $68 $61 $66 $19 $67 $1D  $5E $60 $67 $60 $67 $9D $67 $9D  $65 $1E $66 $1E $66 $26 $66 $27
.by  $5C $4A $66 $4A $5C $75 $66 $75  $65 $1C $65 $1D $65 $1F $65 $1F  $65 $25 $65 $25 $65 $28 $65 $29
.by  $63 $57 $65 $57 $65 $5B $65 $5B  $5C $76 $65 $77 $64 $20 $64 $21  $59 $4B $64 $4B $62 $58 $64 $58
.by  $60 $59 $63 $59 $61 $5E $63 $5E  $63 $9A $63 $9A $62 $01 $62 $01  $62 $26 $62 $26 $55 $4C $62 $4C
.by  $51 $4E $62 $4E $5E $54 $62 $55  $5F $5F $62 $5F $5E $49 $61 $49  $5F $5A $61 $5A $61 $A1 $61 $A1
.by  $5F $01 $60 $01 $5F $03 $60 $03  $5B $4F $60 $4F $5F $56 $60 $56  $5F $5B $60 $5B $3E $61 $60 $61
.by  $5E $53 $5F $53 $5F $5C $5F $5C  $3D $62 $5F $62 $5F $A1 $5F $A1  $5E $06 $5E $06 $5C $07 $5D $08
.by  $5D $37 $5D $37 $5D $39 $5D $39  $59 $5D $5D $5D $5D $9E $5D $9E  $5D $A0 $5D $A0 $5D $A2 $5D $A2
.by  $5B $05 $5C $06 $5B $09 $5C $09  $5C $0A $5C $0A $5C $3C $5C $3C  $5A $50 $5C $50 $5C $52 $5C $52
.by  $5C $5C $5C $5C $59 $5E $5C $5F  $5C $A3 $5C $A3 $53 $4D $5B $4D  $59 $51 $5B $51 $56 $60 $5B $60
.by  $3E $5A $5A $5B $59 $5C $5A $5C  $5A $A0 $5A $A0 $59 $04 $59 $05  $59 $08 $59 $08 $59 $0D $59 $0D
.by  $59 $0F $59 $0F $57 $52 $59 $52  $58 $54 $59 $54 $55 $58 $59 $59  $4D $72 $59 $72 $59 $7D $90 $7D
.by  $59 $A5 $59 $A5 $57 $01 $58 $01  $58 $06 $58 $07 $58 $11 $58 $11  $4F $4F $58 $4F $56 $53 $58 $53
.by  $57 $57 $58 $57 $58 $5F $58 $5F  $41 $73 $58 $73 $58 $A2 $58 $A2  $57 $A6 $58 $A6 $57 $12 $57 $13
.by  $3E $43 $57 $43 $56 $0A $56 $0A  $56 $14 $56 $14 $3B $42 $56 $42  $3E $44 $56 $45 $54 $50 $56 $50
.by  $54 $54 $56 $54 $3E $5C $56 $5C  $49 $74 $56 $74 $54 $7A $56 $7A  $56 $A3 $56 $A3 $56 $A7 $56 $A8
.by  $55 $01 $55 $01 $55 $0E $55 $0E  $55 $10 $55 $13 $55 $16 $55 $17  $3E $41 $55 $41 $3E $46 $55 $46
.by  $53 $51 $55 $51 $54 $79 $55 $79  $54 $7B $55 $7C $55 $A9 $55 $A9  $54 $0D $54 $0D $53 $17 $54 $17
.by  $54 $18 $54 $18 $3E $40 $54 $40  $3F $47 $54 $48 $51 $56 $54 $56  $3E $59 $54 $59 $3D $5D $54 $5D
.by  $3F $60 $54 $60 $54 $7D $54 $7D  $52 $00 $53 $00 $53 $01 $53 $01  $53 $0F $53 $12 $53 $19 $53 $19
.by  $3E $3F $53 $3F $3F $49 $53 $49  $4C $52 $53 $52 $53 $55 $53 $55  $40 $5E $53 $5F $4A $75 $53 $75
.by  $53 $A7 $53 $A7 $52 $10 $52 $10  $51 $15 $52 $15 $52 $1A $52 $1B  $3E $3E $52 $3E $3F $4A $52 $4A
.by  $50 $53 $52 $53 $40 $57 $52 $58  $4A $76 $52 $76 $52 $80 $52 $80  $51 $1B $51 $1D $3E $3D $51 $3D
.by  $3F $4B $51 $4B $4E $50 $51 $50  $4F $54 $51 $54 $3D $77 $51 $77  $51 $7B $51 $7B $51 $81 $51 $81
.by  $50 $14 $50 $14 $50 $1E $50 $1F  $3E $3C $50 $3C $3F $4C $50 $4C  $4D $51 $50 $51 $4A $7E $50 $7F
.by  $4C $82 $50 $82 $50 $A7 $50 $A7  $50 $A9 $50 $A9 $50 $AB $50 $AB  $4F $20 $4F $21 $3E $3B $4F $3B
.by  $3F $4D $4F $4D $49 $55 $4F $55  $4F $70 $4F $70 $3C $78 $4F $78  $48 $80 $4F $80 $4A $81 $4F $81
.by  $4E $83 $4F $8D $4E $17 $4E $17  $4E $1A $4E $1A $4B $22 $4E $22  $3E $3A $4E $3A $3E $4E $4E $4E
.by  $4B $53 $4E $53 $40 $56 $4E $56  $4E $6F $4E $6F $3B $79 $4E $79  $4E $7C $4E $7D $4E $AE $4E $AE
.by  $4D $18 $4D $19 $47 $23 $4D $23  $4D $24 $4D $24 $3F $39 $4D $39  $3F $4F $4D $4F $4B $54 $4D $54
.by  $4D $6E $4D $6E $3A $7A $4D $7A  $4C $7D $4D $7D $4D $AB $4D $AB  $4D $AD $4D $AD $4C $0D $4C $0D
.by  $4C $1B $4C $1B $4C $1D $4C $1E  $48 $25 $4C $26 $3F $38 $4C $38  $3F $50 $4C $50 $4C $6D $4C $6D
.by  $4C $70 $4D $70 $4C $AC $4C $AC  $4B $0C $4B $0C $4B $1C $4B $1C  $49 $1F $4B $1F $4A $24 $4B $24
.by  $4B $27 $4B $27 $49 $6A $4B $6B  $4B $72 $4B $72 $3A $7B $4B $7B  $4B $AA $4B $AA $4B $B0 $4B $B0
.by  $49 $0A $4A $0A $4A $0B $4A $0B  $4A $1E $4A $1E $49 $20 $4A $21  $40 $37 $4A $37 $4A $71 $4A $71
.by  $4A $AB $4A $AB $48 $08 $49 $08  $49 $22 $49 $22 $48 $28 $49 $28  $41 $36 $49 $36 $3E $51 $49 $51
.by  $39 $64 $49 $64 $49 $67 $49 $67  $48 $6C $49 $6C $48 $70 $49 $70  $3E $7C $49 $7C $49 $7F $49 $7F
.by  $48 $21 $48 $21 $48 $24 $48 $24  $3F $52 $48 $52 $36 $65 $48 $65  $47 $68 $48 $68 $47 $6D $48 $6D
.by  $48 $6E $49 $6E $48 $AE $48 $AE  $48 $B0 $48 $B0 $48 $B2 $48 $B2  $47 $22 $47 $22 $45 $26 $47 $26
.by  $42 $35 $47 $35 $3E $53 $47 $54  $40 $55 $47 $55 $46 $69 $47 $69  $47 $71 $48 $71 $46 $72 $47 $72
.by  $3E $76 $48 $76 $3E $7D $47 $7D  $46 $AD $47 $AD $46 $AF $47 $AF  $46 $24 $46 $25 $45 $27 $46 $27
.by  $44 $34 $46 $34 $42 $66 $46 $66  $45 $6A $46 $6A $45 $6E $46 $6F  $46 $70 $46 $70 $40 $74 $47 $74
.by  $3F $75 $46 $75 $3D $7E $46 $7E  $46 $B1 $46 $B1 $41 $67 $45 $67  $45 $6B $45 $6B $45 $B0 $45 $B0
.by  $45 $B2 $45 $B2 $45 $B4 $45 $B4  $40 $68 $44 $68 $44 $6C $44 $6C  $44 $6F $44 $72 $32 $7F $44 $7F
.by  $3F $69 $43 $69 $43 $70 $43 $72  $32 $80 $43 $80 $43 $AF $43 $AF  $43 $B3 $43 $B3 $43 $B5 $43 $B5
.by  $42 $71 $42 $72 $42 $B0 $42 $B0  $42 $B4 $42 $B4 $42 $B6 $42 $B6  $41 $72 $41 $72 $35 $81 $41 $81
.by  $3C $66 $40 $66 $3F $6A $40 $6B  $3F $5F $3F $5F $33 $67 $3F $67  $34 $82 $3F $82 $3F $B2 $3F $B2
.by  $3F $B4 $3F $B4 $3F $B8 $3F $B8  $3C $6B $3E $6B $34 $83 $3E $83  $32 $68 $3D $68 $3A $69 $3D $69
.by  $3D $6A $3D $6A $3C $6C $3D $6C  $33 $84 $3D $84 $3D $B3 $3D $B3  $3D $B7 $3D $B7 $3D $B9 $3D $B9
.by  $3B $6D $3C $6D $39 $7C $3C $7D  $3C $B4 $3C $B4 $3A $6A $3B $6A  $3B $6E $3B $6E $38 $7E $3B $7E
.by  $33 $85 $3B $85 $39 $43 $3A $43  $34 $66 $3A $66 $39 $6B $3A $6B  $3A $6F $3A $70 $36 $86 $3A $86
.by  $3A $B9 $3A $BB $39 $70 $39 $70  $39 $BB $39 $BC $38 $44 $38 $45  $38 $71 $38 $72 $37 $78 $38 $78
.by  $38 $79 $38 $7B $36 $87 $38 $87  $38 $B6 $38 $B6 $38 $BC $38 $BD  $37 $72 $37 $72 $2E $7C $37 $7C
.by  $37 $7D $37 $7D $30 $88 $37 $88  $37 $BB $37 $BB $36 $45 $36 $46  $36 $73 $36 $74 $35 $79 $36 $7B
.by  $2E $7E $36 $7E $36 $BD $36 $BD  $30 $6A $35 $6A $35 $6B $35 $6C  $34 $74 $35 $78 $2D $7D $35 $7D
.by  $35 $B8 $35 $B8 $35 $BA $35 $BA  $35 $BE $35 $BE $34 $47 $34 $47  $31 $69 $34 $69 $34 $6C $34 $6D
.by  $2E $7B $34 $7B $33 $89 $34 $9B  $34 $BB $34 $BB $34 $BD $34 $BD  $34 $BF $34 $BF $33 $46 $33 $46
.by  $2F $6B $33 $6B $32 $6E $33 $6F  $31 $75 $33 $75 $32 $76 $33 $7A  $2D $81 $33 $81 $32 $86 $33 $87
.by  $31 $48 $32 $48 $2E $6C $32 $6C  $2E $70 $32 $70 $2F $71 $32 $72  $31 $73 $32 $74 $2D $82 $32 $82
.by  $2F $8A $32 $8A $32 $BC $32 $BC  $2E $6D $31 $6D $31 $79 $31 $7A  $2E $83 $31 $84 $31 $87 $31 $87
.by  $30 $89 $31 $89 $2E $8B $31 $8C  $30 $BB $31 $BB $30 $49 $30 $49  $2D $6E $30 $6F $30 $7A $30 $7A
.by  $2D $7F $30 $80 $2E $73 $2F $73  $2F $78 $2F $79 $2F $BC $2F $BC  $2E $72 $2E $72 $2E $74 $2E $76
.by  $2E $85 $2E $85 $2E $8D $2E $8D  $2D $4A $2D $4A $2D $75 $2D $78  $2D $BD $2D $BD $2B $4B $2C $4B
.by  $2C $71 $2C $72 $2C $77 $2C $7B  $2C $BE $2C $BE $2B $1C $2B $1C  $2B $73 $2B $74 $2B $79 $2B $7D
.by  $2B $BF $2B $BF $28 $4C $2A $4C  $2A $75 $2A $76 $2A $7B $2A $7D  $2A $85 $2A $86 $29 $4D $29 $4D
.by  $29 $77 $29 $78 $29 $7C $29 $7C  $28 $79 $28 $7B $27 $4E $27 $4E  $25 $7B $26 $7B $25 $4E $25 $4F
.by  $24 $7D $26 $7E $22 $4F $23 $50  $1F $00 $22 $01 $19 $8F $22 $90  $1F $02 $21 $02 $1E $51 $21 $51
.by  $1A $8E $21 $8E $18 $91 $21 $91  $20 $03 $20 $04 $20 $50 $20 $50  $17 $92 $20 $93 $1F $05 $1F $05
.by  $16 $94 $1F $94 $1D $03 $1E $03  $1E $04 $1E $04 $1C $06 $1E $06  $1E $52 $1E $52 $1A $8D $1E $8D
.by  $15 $95 $1E $95 $1D $53 $1D $53  $1B $8C $1D $8C $15 $96 $1D $96  $1C $02 $1C $02 $1C $52 $1C $52
.by  $1C $8B $1C $8B $14 $97 $1C $97  $19 $54 $1B $54 $14 $98 $1B $98  $19 $07 $1A $07 $1A $53 $1A $53
.by  $13 $99 $1A $99 $19 $05 $19 $05  $17 $08 $19 $08 $17 $55 $19 $55  $13 $9A $19 $9A $18 $06 $18 $06
.by  $18 $90 $18 $90 $12 $9B $18 $9B  $16 $09 $17 $09 $12 $9C $17 $9C  $16 $07 $16 $07 $15 $56 $16 $56
.by  $16 $93 $16 $93 $12 $9D $16 $9D  $11 $9E $15 $9E $13 $0A $14 $0A  $14 $57 $14 $57 $11 $9F $14 $9F
.by  $13 $09 $13 $09 $12 $58 $13 $58  $10 $A0 $13 $A0 $10 $A1 $12 $A1  $10 $0A $11 $0A $11 $0B $11 $0B
.by  $0F $59 $11 $59 $0F $A2 $11 $A2  $10 $0C $10 $0C $0F $A3 $10 $A3  $0E $A4 $0F $A4 $0D $0B $0E $0B
.by  $0D $A5 $0E $A5 $0C $0D $0D $0D  $0D $5A $0D $5A $0D $A6 $0D $A6  $0C $A7 $0C $A7 $0B $0E $0B $0E
.by  $09 $5C $0B $5C $0B $A8 $0B $A8  $08 $5D $0A $5D $09 $0D $09 $0D  $09 $0F $09 $0F $07 $0E $07 $0E
.by  $07 $5E $07 $5E $05 $0F $05 $0F  $05 $5F $05 $5F $03 $60 $04 $60  $03 $5F $03 $5F $01 $61 $02 $61
.by  $00 $11 $00 $11 $00 $62 $00 $62  $96 $60 $96 $60 $94 $61 $94 $61  $91 $5F $92 $5F $92 $62 $92 $62
.by  $91 $80 $91 $82 $90 $63 $90 $63  $5A $7D $90 $7D $53 $81 $90 $83  $5A $7E $8F $80 $3F $84 $8F $84
.by  $8D $63 $8E $63 $41 $85 $8E $85  $82 $5E $8C $5E $84 $5F $8C $5F  $5A $7C $8C $7C $81 $86 $8C $86
.by  $8A $60 $8B $61 $80 $5D $8A $5D  $7C $78 $8A $78 $84 $79 $8A $7B  $89 $5C $89 $5C $87 $77 $89 $77
.by  $86 $60 $88 $60 $7E $5C $85 $5C  $7C $5B $84 $5B $84 $76 $84 $77  $83 $34 $83 $35 $7C $77 $83 $77
.by  $79 $7A $83 $7B $7D $76 $82 $76  $7B $79 $82 $79 $81 $3F $81 $3F  $7D $75 $81 $75 $7E $57 $80 $5A
.by  $80 $8E $80 $8F $80 $93 $80 $93  $41 $86 $7F $86 $7E $3C $7E $3C  $41 $87 $7E $87 $7A $88 $7E $88
.by  $7E $8B $7E $8B $7B $56 $7D $56  $79 $58 $7D $59 $7B $5A $7D $5A  $7C $8C $7D $8C $7B $89 $7C $89
.by  $7C $91 $7C $91 $7A $57 $7B $57  $7B $92 $7B $92 $73 $75 $7A $75  $7A $8A $7A $8A $73 $76 $79 $76
.by  $79 $8B $79 $8B $72 $77 $78 $77  $58 $7B $78 $7B $77 $8A $78 $8A  $71 $78 $77 $7A $74 $88 $76 $88
.by  $76 $8B $76 $8B $76 $8D $76 $8D  $71 $41 $75 $42 $75 $74 $75 $74  $74 $3E $74 $3E $72 $40 $73 $40
.by  $72 $43 $73 $43 $70 $3D $71 $3E  $69 $74 $71 $75 $70 $88 $71 $88  $70 $3F $70 $3F $70 $79 $70 $7A
.by  $70 $8F $70 $8F $6F $3C $6F $3C  $6F $3E $6F $3E $68 $76 $6F $76  $5B $7A $6F $7A $6F $91 $6F $91
.by  $6E $3D $6E $3D $67 $77 $6E $79  $65 $88 $6E $88 $6C $89 $6D $89  $69 $31 $69 $31 $5B $78 $66 $79
.by  $59 $74 $65 $74 $5B $73 $64 $73  $5C $75 $64 $77 $63 $88 $63 $88  $5A $88 $60 $88 $5E $9B $5E $9B
.by  $5A $89 $5C $8A $5B $77 $5B $77  $5A $8B $5B $8B $59 $75 $5A $75  $5A $76 $5A $76 $5A $8C $5A $8C
.by  $58 $7A $59 $7A $55 $7F $59 $80  $57 $7C $58 $7C $55 $7E $58 $7E  $56 $7D $57 $7D $54 $80 $54 $80
.by  $41 $88 $54 $88 $53 $77 $53 $77  $41 $89 $53 $89 $52 $78 $52 $78  $52 $82 $52 $83 $34 $8A $52 $8A
.by  $51 $83 $51 $83 $40 $8B $51 $8C  $50 $79 $50 $7A $41 $8D $50 $8D  $4F $7A $4F $7A $41 $8E $4E $8E
.by  $4D $70 $4D $70 $40 $83 $4C $83  $4C $90 $4C $90 $49 $73 $4A $73  $4A $74 $4A $74 $42 $82 $4A $82
.by  $46 $8F $4A $8F $49 $6E $49 $6E  $49 $72 $49 $72 $2E $90 $49 $91  $48 $92 $49 $92 $48 $70 $48 $71
.by  $48 $75 $48 $76 $46 $73 $47 $73  $47 $74 $47 $74 $43 $81 $47 $81  $46 $72 $46 $72 $45 $80 $46 $80
.by  $2C $92 $45 $93 $2E $8F $44 $8F  $2A $94 $43 $94 $29 $95 $41 $95  $3E $59 $3F $5D $3D $85 $3F $85
.by  $30 $8D $3F $8E $26 $96 $3F $96  $3E $51 $3E $51 $3E $53 $3E $54  $3E $56 $3E $56 $3E $58 $3E $58
.by  $3E $5E $3E $5E $3C $86 $3E $89  $33 $8B $3E $8C $3D $5D $3D $5D  $3D $60 $3D $60 $27 $97 $3C $97
.by  $3A $87 $3B $89 $29 $98 $3A $98  $2B $99 $3A $99 $39 $88 $39 $89  $37 $6E $38 $6F $36 $89 $38 $89
.by  $36 $70 $37 $70 $29 $9A $37 $9A  $36 $71 $36 $71 $35 $72 $35 $72  $28 $9B $35 $9B $27 $9C $33 $9D
.by  $31 $8C $32 $8C $30 $86 $30 $86  $29 $9E $30 $9E $2F $87 $2F $87  $2F $8E $2F $8E $28 $9F $2F $9F
.by  $2F $A0 $2F $A0 $2D $91 $2D $91  $28 $A0 $2D $A0 $2C $90 $2C $90  $2B $83 $2B $83 $2B $93 $2B $93
.by  $2A $92 $2A $92 $27 $A1 $2A $A2  $29 $91 $29 $91 $29 $99 $29 $99  $24 $A3 $29 $A3 $28 $85 $28 $85
.by  $28 $92 $28 $93 $24 $A4 $28 $A4  $27 $7C $27 $7C $26 $93 $27 $94  $25 $9E $27 $9E $25 $7D $26 $7E
.by  $23 $84 $26 $85 $24 $87 $26 $87  $26 $88 $26 $88 $24 $95 $26 $95  $26 $9D $26 $9D $23 $9F $26 $9F
.by  $24 $A5 $26 $A5 $24 $7F $25 $7F  $24 $83 $25 $83 $23 $86 $25 $86  $25 $89 $25 $89 $25 $94 $25 $94
.by  $25 $97 $25 $97 $23 $A6 $25 $A6  $23 $80 $24 $80 $24 $81 $24 $81  $24 $88 $24 $88 $24 $96 $24 $96
.by  $21 $A0 $24 $A0 $22 $97 $23 $98  $20 $A1 $23 $A1 $23 $A2 $23 $A2  $21 $99 $21 $9A $20 $A8 $21 $A9
.by  $1F $9A $20 $9A $1D $A2 $20 $A2  $1E $A3 $20 $A3 $1F $AA $20 $AA  $1E $9B $1F $9B $1E $A4 $1F $A5
.by  $1E $AB $1F $AB $1D $9C $1E $9C  $1E $AC $1E $AC $1C $9D $1D $9D  $1B $9E $1C $9E $19 $9F $1A $9F
.by  $18 $A0 $19 $A0 $16 $A1 $18 $A1  $15 $A2 $15 $A2 $12 $A3 $13 $A3
.endm

	end
